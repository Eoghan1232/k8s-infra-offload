// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.8.0
// source: p4runtime.proto

package pb

import (
	context "context"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SdnPort int32

const (
	SdnPort_SDN_PORT_UNKNOWN     SdnPort = 0
	SdnPort_SDN_PORT_MIN         SdnPort = 1
	SdnPort_SDN_PORT_MAX         SdnPort = -257
	SdnPort_SDN_PORT_RECIRCULATE SdnPort = -6
	SdnPort_SDN_PORT_CPU         SdnPort = -3
)

// Enum value maps for SdnPort.
var (
	SdnPort_name = map[int32]string{
		0:    "SDN_PORT_UNKNOWN",
		1:    "SDN_PORT_MIN",
		-257: "SDN_PORT_MAX",
		-6:   "SDN_PORT_RECIRCULATE",
		-3:   "SDN_PORT_CPU",
	}
	SdnPort_value = map[string]int32{
		"SDN_PORT_UNKNOWN":     0,
		"SDN_PORT_MIN":         1,
		"SDN_PORT_MAX":         -257,
		"SDN_PORT_RECIRCULATE": -6,
		"SDN_PORT_CPU":         -3,
	}
)

func (x SdnPort) Enum() *SdnPort {
	p := new(SdnPort)
	*p = x
	return p
}

func (x SdnPort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SdnPort) Descriptor() protoreflect.EnumDescriptor {
	return file_p4runtime_proto_enumTypes[0].Descriptor()
}

func (SdnPort) Type() protoreflect.EnumType {
	return &file_p4runtime_proto_enumTypes[0]
}

func (x SdnPort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SdnPort.Descriptor instead.
func (SdnPort) EnumDescriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{0}
}

type WriteRequest_Atomicity int32

const (
	WriteRequest_CONTINUE_ON_ERROR WriteRequest_Atomicity = 0
	WriteRequest_ROLLBACK_ON_ERROR WriteRequest_Atomicity = 1
	WriteRequest_DATAPLANE_ATOMIC  WriteRequest_Atomicity = 2
)

// Enum value maps for WriteRequest_Atomicity.
var (
	WriteRequest_Atomicity_name = map[int32]string{
		0: "CONTINUE_ON_ERROR",
		1: "ROLLBACK_ON_ERROR",
		2: "DATAPLANE_ATOMIC",
	}
	WriteRequest_Atomicity_value = map[string]int32{
		"CONTINUE_ON_ERROR": 0,
		"ROLLBACK_ON_ERROR": 1,
		"DATAPLANE_ATOMIC":  2,
	}
)

func (x WriteRequest_Atomicity) Enum() *WriteRequest_Atomicity {
	p := new(WriteRequest_Atomicity)
	*p = x
	return p
}

func (x WriteRequest_Atomicity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WriteRequest_Atomicity) Descriptor() protoreflect.EnumDescriptor {
	return file_p4runtime_proto_enumTypes[1].Descriptor()
}

func (WriteRequest_Atomicity) Type() protoreflect.EnumType {
	return &file_p4runtime_proto_enumTypes[1]
}

func (x WriteRequest_Atomicity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WriteRequest_Atomicity.Descriptor instead.
func (WriteRequest_Atomicity) EnumDescriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{0, 0}
}

type Update_Type int32

const (
	Update_UNSPECIFIED Update_Type = 0
	Update_INSERT      Update_Type = 1
	Update_MODIFY      Update_Type = 2
	Update_DELETE      Update_Type = 3
)

// Enum value maps for Update_Type.
var (
	Update_Type_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "INSERT",
		2: "MODIFY",
		3: "DELETE",
	}
	Update_Type_value = map[string]int32{
		"UNSPECIFIED": 0,
		"INSERT":      1,
		"MODIFY":      2,
		"DELETE":      3,
	}
)

func (x Update_Type) Enum() *Update_Type {
	p := new(Update_Type)
	*p = x
	return p
}

func (x Update_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Update_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_p4runtime_proto_enumTypes[2].Descriptor()
}

func (Update_Type) Type() protoreflect.EnumType {
	return &file_p4runtime_proto_enumTypes[2]
}

func (x Update_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Update_Type.Descriptor instead.
func (Update_Type) EnumDescriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{4, 0}
}

type SetForwardingPipelineConfigRequest_Action int32

const (
	SetForwardingPipelineConfigRequest_UNSPECIFIED          SetForwardingPipelineConfigRequest_Action = 0
	SetForwardingPipelineConfigRequest_VERIFY               SetForwardingPipelineConfigRequest_Action = 1
	SetForwardingPipelineConfigRequest_VERIFY_AND_SAVE      SetForwardingPipelineConfigRequest_Action = 2
	SetForwardingPipelineConfigRequest_VERIFY_AND_COMMIT    SetForwardingPipelineConfigRequest_Action = 3
	SetForwardingPipelineConfigRequest_COMMIT               SetForwardingPipelineConfigRequest_Action = 4
	SetForwardingPipelineConfigRequest_RECONCILE_AND_COMMIT SetForwardingPipelineConfigRequest_Action = 5
)

// Enum value maps for SetForwardingPipelineConfigRequest_Action.
var (
	SetForwardingPipelineConfigRequest_Action_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "VERIFY",
		2: "VERIFY_AND_SAVE",
		3: "VERIFY_AND_COMMIT",
		4: "COMMIT",
		5: "RECONCILE_AND_COMMIT",
	}
	SetForwardingPipelineConfigRequest_Action_value = map[string]int32{
		"UNSPECIFIED":          0,
		"VERIFY":               1,
		"VERIFY_AND_SAVE":      2,
		"VERIFY_AND_COMMIT":    3,
		"COMMIT":               4,
		"RECONCILE_AND_COMMIT": 5,
	}
)

func (x SetForwardingPipelineConfigRequest_Action) Enum() *SetForwardingPipelineConfigRequest_Action {
	p := new(SetForwardingPipelineConfigRequest_Action)
	*p = x
	return p
}

func (x SetForwardingPipelineConfigRequest_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetForwardingPipelineConfigRequest_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_p4runtime_proto_enumTypes[3].Descriptor()
}

func (SetForwardingPipelineConfigRequest_Action) Type() protoreflect.EnumType {
	return &file_p4runtime_proto_enumTypes[3]
}

func (x SetForwardingPipelineConfigRequest_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetForwardingPipelineConfigRequest_Action.Descriptor instead.
func (SetForwardingPipelineConfigRequest_Action) EnumDescriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{44, 0}
}

type GetForwardingPipelineConfigRequest_ResponseType int32

const (
	GetForwardingPipelineConfigRequest_ALL                      GetForwardingPipelineConfigRequest_ResponseType = 0
	GetForwardingPipelineConfigRequest_COOKIE_ONLY              GetForwardingPipelineConfigRequest_ResponseType = 1
	GetForwardingPipelineConfigRequest_P4INFO_AND_COOKIE        GetForwardingPipelineConfigRequest_ResponseType = 2
	GetForwardingPipelineConfigRequest_DEVICE_CONFIG_AND_COOKIE GetForwardingPipelineConfigRequest_ResponseType = 3
)

// Enum value maps for GetForwardingPipelineConfigRequest_ResponseType.
var (
	GetForwardingPipelineConfigRequest_ResponseType_name = map[int32]string{
		0: "ALL",
		1: "COOKIE_ONLY",
		2: "P4INFO_AND_COOKIE",
		3: "DEVICE_CONFIG_AND_COOKIE",
	}
	GetForwardingPipelineConfigRequest_ResponseType_value = map[string]int32{
		"ALL":                      0,
		"COOKIE_ONLY":              1,
		"P4INFO_AND_COOKIE":        2,
		"DEVICE_CONFIG_AND_COOKIE": 3,
	}
)

func (x GetForwardingPipelineConfigRequest_ResponseType) Enum() *GetForwardingPipelineConfigRequest_ResponseType {
	p := new(GetForwardingPipelineConfigRequest_ResponseType)
	*p = x
	return p
}

func (x GetForwardingPipelineConfigRequest_ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetForwardingPipelineConfigRequest_ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_p4runtime_proto_enumTypes[4].Descriptor()
}

func (GetForwardingPipelineConfigRequest_ResponseType) Type() protoreflect.EnumType {
	return &file_p4runtime_proto_enumTypes[4]
}

func (x GetForwardingPipelineConfigRequest_ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetForwardingPipelineConfigRequest_ResponseType.Descriptor instead.
func (GetForwardingPipelineConfigRequest_ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{47, 0}
}

type WriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId uint64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// Deprecated: Do not use.
	RoleId     uint64                 `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Role       string                 `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	ElectionId *Uint128               `protobuf:"bytes,3,opt,name=election_id,json=electionId,proto3" json:"election_id,omitempty"`
	Updates    []*Update              `protobuf:"bytes,4,rep,name=updates,proto3" json:"updates,omitempty"`
	Atomicity  WriteRequest_Atomicity `protobuf:"varint,5,opt,name=atomicity,proto3,enum=pb.WriteRequest_Atomicity" json:"atomicity,omitempty"`
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{0}
}

func (x *WriteRequest) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

// Deprecated: Do not use.
func (x *WriteRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *WriteRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *WriteRequest) GetElectionId() *Uint128 {
	if x != nil {
		return x.ElectionId
	}
	return nil
}

func (x *WriteRequest) GetUpdates() []*Update {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *WriteRequest) GetAtomicity() WriteRequest_Atomicity {
	if x != nil {
		return x.Atomicity
	}
	return WriteRequest_CONTINUE_ON_ERROR
}

type WriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WriteResponse) Reset() {
	*x = WriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResponse) ProtoMessage() {}

func (x *WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteResponse.ProtoReflect.Descriptor instead.
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{1}
}

type ReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId uint64    `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Role     string    `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Entities []*Entity `protobuf:"bytes,2,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{2}
}

func (x *ReadRequest) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *ReadRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ReadRequest) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

type ReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{3}
}

func (x *ReadResponse) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

type Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   Update_Type `protobuf:"varint,1,opt,name=type,proto3,enum=pb.Update_Type" json:"type,omitempty"`
	Entity *Entity     `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *Update) Reset() {
	*x = Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update) ProtoMessage() {}

func (x *Update) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update.ProtoReflect.Descriptor instead.
func (*Update) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{4}
}

func (x *Update) GetType() Update_Type {
	if x != nil {
		return x.Type
	}
	return Update_UNSPECIFIED
}

func (x *Update) GetEntity() *Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Entity:
	//	*Entity_ExternEntry
	//	*Entity_TableEntry
	//	*Entity_ActionProfileMember
	//	*Entity_ActionProfileGroup
	//	*Entity_MeterEntry
	//	*Entity_DirectMeterEntry
	//	*Entity_CounterEntry
	//	*Entity_DirectCounterEntry
	//	*Entity_PacketReplicationEngineEntry
	//	*Entity_ValueSetEntry
	//	*Entity_RegisterEntry
	//	*Entity_DigestEntry
	Entity isEntity_Entity `protobuf_oneof:"entity"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{5}
}

func (m *Entity) GetEntity() isEntity_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (x *Entity) GetExternEntry() *ExternEntry {
	if x, ok := x.GetEntity().(*Entity_ExternEntry); ok {
		return x.ExternEntry
	}
	return nil
}

func (x *Entity) GetTableEntry() *TableEntry {
	if x, ok := x.GetEntity().(*Entity_TableEntry); ok {
		return x.TableEntry
	}
	return nil
}

func (x *Entity) GetActionProfileMember() *ActionProfileMember {
	if x, ok := x.GetEntity().(*Entity_ActionProfileMember); ok {
		return x.ActionProfileMember
	}
	return nil
}

func (x *Entity) GetActionProfileGroup() *ActionProfileGroup {
	if x, ok := x.GetEntity().(*Entity_ActionProfileGroup); ok {
		return x.ActionProfileGroup
	}
	return nil
}

func (x *Entity) GetMeterEntry() *MeterEntry {
	if x, ok := x.GetEntity().(*Entity_MeterEntry); ok {
		return x.MeterEntry
	}
	return nil
}

func (x *Entity) GetDirectMeterEntry() *DirectMeterEntry {
	if x, ok := x.GetEntity().(*Entity_DirectMeterEntry); ok {
		return x.DirectMeterEntry
	}
	return nil
}

func (x *Entity) GetCounterEntry() *CounterEntry {
	if x, ok := x.GetEntity().(*Entity_CounterEntry); ok {
		return x.CounterEntry
	}
	return nil
}

func (x *Entity) GetDirectCounterEntry() *DirectCounterEntry {
	if x, ok := x.GetEntity().(*Entity_DirectCounterEntry); ok {
		return x.DirectCounterEntry
	}
	return nil
}

func (x *Entity) GetPacketReplicationEngineEntry() *PacketReplicationEngineEntry {
	if x, ok := x.GetEntity().(*Entity_PacketReplicationEngineEntry); ok {
		return x.PacketReplicationEngineEntry
	}
	return nil
}

func (x *Entity) GetValueSetEntry() *ValueSetEntry {
	if x, ok := x.GetEntity().(*Entity_ValueSetEntry); ok {
		return x.ValueSetEntry
	}
	return nil
}

func (x *Entity) GetRegisterEntry() *RegisterEntry {
	if x, ok := x.GetEntity().(*Entity_RegisterEntry); ok {
		return x.RegisterEntry
	}
	return nil
}

func (x *Entity) GetDigestEntry() *DigestEntry {
	if x, ok := x.GetEntity().(*Entity_DigestEntry); ok {
		return x.DigestEntry
	}
	return nil
}

type isEntity_Entity interface {
	isEntity_Entity()
}

type Entity_ExternEntry struct {
	ExternEntry *ExternEntry `protobuf:"bytes,1,opt,name=extern_entry,json=externEntry,proto3,oneof"`
}

type Entity_TableEntry struct {
	TableEntry *TableEntry `protobuf:"bytes,2,opt,name=table_entry,json=tableEntry,proto3,oneof"`
}

type Entity_ActionProfileMember struct {
	ActionProfileMember *ActionProfileMember `protobuf:"bytes,3,opt,name=action_profile_member,json=actionProfileMember,proto3,oneof"`
}

type Entity_ActionProfileGroup struct {
	ActionProfileGroup *ActionProfileGroup `protobuf:"bytes,4,opt,name=action_profile_group,json=actionProfileGroup,proto3,oneof"`
}

type Entity_MeterEntry struct {
	MeterEntry *MeterEntry `protobuf:"bytes,5,opt,name=meter_entry,json=meterEntry,proto3,oneof"`
}

type Entity_DirectMeterEntry struct {
	DirectMeterEntry *DirectMeterEntry `protobuf:"bytes,6,opt,name=direct_meter_entry,json=directMeterEntry,proto3,oneof"`
}

type Entity_CounterEntry struct {
	CounterEntry *CounterEntry `protobuf:"bytes,7,opt,name=counter_entry,json=counterEntry,proto3,oneof"`
}

type Entity_DirectCounterEntry struct {
	DirectCounterEntry *DirectCounterEntry `protobuf:"bytes,8,opt,name=direct_counter_entry,json=directCounterEntry,proto3,oneof"`
}

type Entity_PacketReplicationEngineEntry struct {
	PacketReplicationEngineEntry *PacketReplicationEngineEntry `protobuf:"bytes,9,opt,name=packet_replication_engine_entry,json=packetReplicationEngineEntry,proto3,oneof"`
}

type Entity_ValueSetEntry struct {
	ValueSetEntry *ValueSetEntry `protobuf:"bytes,10,opt,name=value_set_entry,json=valueSetEntry,proto3,oneof"`
}

type Entity_RegisterEntry struct {
	RegisterEntry *RegisterEntry `protobuf:"bytes,11,opt,name=register_entry,json=registerEntry,proto3,oneof"`
}

type Entity_DigestEntry struct {
	DigestEntry *DigestEntry `protobuf:"bytes,12,opt,name=digest_entry,json=digestEntry,proto3,oneof"`
}

func (*Entity_ExternEntry) isEntity_Entity() {}

func (*Entity_TableEntry) isEntity_Entity() {}

func (*Entity_ActionProfileMember) isEntity_Entity() {}

func (*Entity_ActionProfileGroup) isEntity_Entity() {}

func (*Entity_MeterEntry) isEntity_Entity() {}

func (*Entity_DirectMeterEntry) isEntity_Entity() {}

func (*Entity_CounterEntry) isEntity_Entity() {}

func (*Entity_DirectCounterEntry) isEntity_Entity() {}

func (*Entity_PacketReplicationEngineEntry) isEntity_Entity() {}

func (*Entity_ValueSetEntry) isEntity_Entity() {}

func (*Entity_RegisterEntry) isEntity_Entity() {}

func (*Entity_DigestEntry) isEntity_Entity() {}

type ExternEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternTypeId uint32   `protobuf:"varint,1,opt,name=extern_type_id,json=externTypeId,proto3" json:"extern_type_id,omitempty"`
	ExternId     uint32   `protobuf:"varint,2,opt,name=extern_id,json=externId,proto3" json:"extern_id,omitempty"`
	Entry        *any.Any `protobuf:"bytes,3,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *ExternEntry) Reset() {
	*x = ExternEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternEntry) ProtoMessage() {}

func (x *ExternEntry) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternEntry.ProtoReflect.Descriptor instead.
func (*ExternEntry) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{6}
}

func (x *ExternEntry) GetExternTypeId() uint32 {
	if x != nil {
		return x.ExternTypeId
	}
	return 0
}

func (x *ExternEntry) GetExternId() uint32 {
	if x != nil {
		return x.ExternId
	}
	return 0
}

func (x *ExternEntry) GetEntry() *any.Any {
	if x != nil {
		return x.Entry
	}
	return nil
}

type TableEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId  uint32        `protobuf:"varint,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	Match    []*FieldMatch `protobuf:"bytes,2,rep,name=match,proto3" json:"match,omitempty"`
	Action   *TableAction  `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Priority int32         `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	// Deprecated: Do not use.
	ControllerMetadata uint64                  `protobuf:"varint,5,opt,name=controller_metadata,json=controllerMetadata,proto3" json:"controller_metadata,omitempty"`
	MeterConfig        *MeterConfig            `protobuf:"bytes,6,opt,name=meter_config,json=meterConfig,proto3" json:"meter_config,omitempty"`
	CounterData        *CounterData            `protobuf:"bytes,7,opt,name=counter_data,json=counterData,proto3" json:"counter_data,omitempty"`
	IsDefaultAction    bool                    `protobuf:"varint,8,opt,name=is_default_action,json=isDefaultAction,proto3" json:"is_default_action,omitempty"`
	IdleTimeoutNs      int64                   `protobuf:"varint,9,opt,name=idle_timeout_ns,json=idleTimeoutNs,proto3" json:"idle_timeout_ns,omitempty"`
	TimeSinceLastHit   *TableEntry_IdleTimeout `protobuf:"bytes,10,opt,name=time_since_last_hit,json=timeSinceLastHit,proto3" json:"time_since_last_hit,omitempty"`
	Metadata           []byte                  `protobuf:"bytes,11,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *TableEntry) Reset() {
	*x = TableEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableEntry) ProtoMessage() {}

func (x *TableEntry) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableEntry.ProtoReflect.Descriptor instead.
func (*TableEntry) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{7}
}

func (x *TableEntry) GetTableId() uint32 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *TableEntry) GetMatch() []*FieldMatch {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *TableEntry) GetAction() *TableAction {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *TableEntry) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

// Deprecated: Do not use.
func (x *TableEntry) GetControllerMetadata() uint64 {
	if x != nil {
		return x.ControllerMetadata
	}
	return 0
}

func (x *TableEntry) GetMeterConfig() *MeterConfig {
	if x != nil {
		return x.MeterConfig
	}
	return nil
}

func (x *TableEntry) GetCounterData() *CounterData {
	if x != nil {
		return x.CounterData
	}
	return nil
}

func (x *TableEntry) GetIsDefaultAction() bool {
	if x != nil {
		return x.IsDefaultAction
	}
	return false
}

func (x *TableEntry) GetIdleTimeoutNs() int64 {
	if x != nil {
		return x.IdleTimeoutNs
	}
	return 0
}

func (x *TableEntry) GetTimeSinceLastHit() *TableEntry_IdleTimeout {
	if x != nil {
		return x.TimeSinceLastHit
	}
	return nil
}

func (x *TableEntry) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// field_match_type ::= exact | ternary | lpm | range | optional
type FieldMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldId uint32 `protobuf:"varint,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	// Types that are assignable to FieldMatchType:
	//	*FieldMatch_Exact_
	//	*FieldMatch_Ternary_
	//	*FieldMatch_Lpm
	//	*FieldMatch_Range_
	//	*FieldMatch_Optional_
	//	*FieldMatch_Other
	FieldMatchType isFieldMatch_FieldMatchType `protobuf_oneof:"field_match_type"`
}

func (x *FieldMatch) Reset() {
	*x = FieldMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMatch) ProtoMessage() {}

func (x *FieldMatch) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMatch.ProtoReflect.Descriptor instead.
func (*FieldMatch) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{8}
}

func (x *FieldMatch) GetFieldId() uint32 {
	if x != nil {
		return x.FieldId
	}
	return 0
}

func (m *FieldMatch) GetFieldMatchType() isFieldMatch_FieldMatchType {
	if m != nil {
		return m.FieldMatchType
	}
	return nil
}

func (x *FieldMatch) GetExact() *FieldMatch_Exact {
	if x, ok := x.GetFieldMatchType().(*FieldMatch_Exact_); ok {
		return x.Exact
	}
	return nil
}

func (x *FieldMatch) GetTernary() *FieldMatch_Ternary {
	if x, ok := x.GetFieldMatchType().(*FieldMatch_Ternary_); ok {
		return x.Ternary
	}
	return nil
}

func (x *FieldMatch) GetLpm() *FieldMatch_LPM {
	if x, ok := x.GetFieldMatchType().(*FieldMatch_Lpm); ok {
		return x.Lpm
	}
	return nil
}

func (x *FieldMatch) GetRange() *FieldMatch_Range {
	if x, ok := x.GetFieldMatchType().(*FieldMatch_Range_); ok {
		return x.Range
	}
	return nil
}

func (x *FieldMatch) GetOptional() *FieldMatch_Optional {
	if x, ok := x.GetFieldMatchType().(*FieldMatch_Optional_); ok {
		return x.Optional
	}
	return nil
}

func (x *FieldMatch) GetOther() *any.Any {
	if x, ok := x.GetFieldMatchType().(*FieldMatch_Other); ok {
		return x.Other
	}
	return nil
}

type isFieldMatch_FieldMatchType interface {
	isFieldMatch_FieldMatchType()
}

type FieldMatch_Exact_ struct {
	Exact *FieldMatch_Exact `protobuf:"bytes,2,opt,name=exact,proto3,oneof"`
}

type FieldMatch_Ternary_ struct {
	Ternary *FieldMatch_Ternary `protobuf:"bytes,3,opt,name=ternary,proto3,oneof"`
}

type FieldMatch_Lpm struct {
	Lpm *FieldMatch_LPM `protobuf:"bytes,4,opt,name=lpm,proto3,oneof"`
}

type FieldMatch_Range_ struct {
	Range *FieldMatch_Range `protobuf:"bytes,6,opt,name=range,proto3,oneof"`
}

type FieldMatch_Optional_ struct {
	Optional *FieldMatch_Optional `protobuf:"bytes,7,opt,name=optional,proto3,oneof"`
}

type FieldMatch_Other struct {
	// Architecture-specific match value; it corresponds to the other_match_type
	// in the P4Info MatchField message.
	Other *any.Any `protobuf:"bytes,100,opt,name=other,proto3,oneof"`
}

func (*FieldMatch_Exact_) isFieldMatch_FieldMatchType() {}

func (*FieldMatch_Ternary_) isFieldMatch_FieldMatchType() {}

func (*FieldMatch_Lpm) isFieldMatch_FieldMatchType() {}

func (*FieldMatch_Range_) isFieldMatch_FieldMatchType() {}

func (*FieldMatch_Optional_) isFieldMatch_FieldMatchType() {}

func (*FieldMatch_Other) isFieldMatch_FieldMatchType() {}

type TableAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*TableAction_Action
	//	*TableAction_ActionProfileMemberId
	//	*TableAction_ActionProfileGroupId
	//	*TableAction_ActionProfileActionSet
	Type isTableAction_Type `protobuf_oneof:"type"`
}

func (x *TableAction) Reset() {
	*x = TableAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableAction) ProtoMessage() {}

func (x *TableAction) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableAction.ProtoReflect.Descriptor instead.
func (*TableAction) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{9}
}

func (m *TableAction) GetType() isTableAction_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *TableAction) GetAction() *Action {
	if x, ok := x.GetType().(*TableAction_Action); ok {
		return x.Action
	}
	return nil
}

func (x *TableAction) GetActionProfileMemberId() uint32 {
	if x, ok := x.GetType().(*TableAction_ActionProfileMemberId); ok {
		return x.ActionProfileMemberId
	}
	return 0
}

func (x *TableAction) GetActionProfileGroupId() uint32 {
	if x, ok := x.GetType().(*TableAction_ActionProfileGroupId); ok {
		return x.ActionProfileGroupId
	}
	return 0
}

func (x *TableAction) GetActionProfileActionSet() *ActionProfileActionSet {
	if x, ok := x.GetType().(*TableAction_ActionProfileActionSet); ok {
		return x.ActionProfileActionSet
	}
	return nil
}

type isTableAction_Type interface {
	isTableAction_Type()
}

type TableAction_Action struct {
	Action *Action `protobuf:"bytes,1,opt,name=action,proto3,oneof"`
}

type TableAction_ActionProfileMemberId struct {
	ActionProfileMemberId uint32 `protobuf:"varint,2,opt,name=action_profile_member_id,json=actionProfileMemberId,proto3,oneof"`
}

type TableAction_ActionProfileGroupId struct {
	ActionProfileGroupId uint32 `protobuf:"varint,3,opt,name=action_profile_group_id,json=actionProfileGroupId,proto3,oneof"`
}

type TableAction_ActionProfileActionSet struct {
	ActionProfileActionSet *ActionProfileActionSet `protobuf:"bytes,4,opt,name=action_profile_action_set,json=actionProfileActionSet,proto3,oneof"`
}

func (*TableAction_Action) isTableAction_Type() {}

func (*TableAction_ActionProfileMemberId) isTableAction_Type() {}

func (*TableAction_ActionProfileGroupId) isTableAction_Type() {}

func (*TableAction_ActionProfileActionSet) isTableAction_Type() {}

type ActionProfileActionSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionProfileActions []*ActionProfileAction `protobuf:"bytes,1,rep,name=action_profile_actions,json=actionProfileActions,proto3" json:"action_profile_actions,omitempty"`
}

func (x *ActionProfileActionSet) Reset() {
	*x = ActionProfileActionSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionProfileActionSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionProfileActionSet) ProtoMessage() {}

func (x *ActionProfileActionSet) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionProfileActionSet.ProtoReflect.Descriptor instead.
func (*ActionProfileActionSet) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{10}
}

func (x *ActionProfileActionSet) GetActionProfileActions() []*ActionProfileAction {
	if x != nil {
		return x.ActionProfileActions
	}
	return nil
}

type ActionProfileAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action *Action `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Weight int32   `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	// Types that are assignable to WatchKind:
	//	*ActionProfileAction_Watch
	//	*ActionProfileAction_WatchPort
	WatchKind isActionProfileAction_WatchKind `protobuf_oneof:"watch_kind"`
}

func (x *ActionProfileAction) Reset() {
	*x = ActionProfileAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionProfileAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionProfileAction) ProtoMessage() {}

func (x *ActionProfileAction) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionProfileAction.ProtoReflect.Descriptor instead.
func (*ActionProfileAction) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{11}
}

func (x *ActionProfileAction) GetAction() *Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *ActionProfileAction) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (m *ActionProfileAction) GetWatchKind() isActionProfileAction_WatchKind {
	if m != nil {
		return m.WatchKind
	}
	return nil
}

// Deprecated: Do not use.
func (x *ActionProfileAction) GetWatch() int32 {
	if x, ok := x.GetWatchKind().(*ActionProfileAction_Watch); ok {
		return x.Watch
	}
	return 0
}

func (x *ActionProfileAction) GetWatchPort() []byte {
	if x, ok := x.GetWatchKind().(*ActionProfileAction_WatchPort); ok {
		return x.WatchPort
	}
	return nil
}

type isActionProfileAction_WatchKind interface {
	isActionProfileAction_WatchKind()
}

type ActionProfileAction_Watch struct {
	// Deprecated: Do not use.
	Watch int32 `protobuf:"varint,3,opt,name=watch,proto3,oneof"`
}

type ActionProfileAction_WatchPort struct {
	WatchPort []byte `protobuf:"bytes,4,opt,name=watch_port,json=watchPort,proto3,oneof"`
}

func (*ActionProfileAction_Watch) isActionProfileAction_WatchKind() {}

func (*ActionProfileAction_WatchPort) isActionProfileAction_WatchKind() {}

type ActionProfileMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionProfileId uint32  `protobuf:"varint,1,opt,name=action_profile_id,json=actionProfileId,proto3" json:"action_profile_id,omitempty"`
	MemberId        uint32  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Action          *Action `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *ActionProfileMember) Reset() {
	*x = ActionProfileMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionProfileMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionProfileMember) ProtoMessage() {}

func (x *ActionProfileMember) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionProfileMember.ProtoReflect.Descriptor instead.
func (*ActionProfileMember) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{12}
}

func (x *ActionProfileMember) GetActionProfileId() uint32 {
	if x != nil {
		return x.ActionProfileId
	}
	return 0
}

func (x *ActionProfileMember) GetMemberId() uint32 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *ActionProfileMember) GetAction() *Action {
	if x != nil {
		return x.Action
	}
	return nil
}

type ActionProfileGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionProfileId uint32                       `protobuf:"varint,1,opt,name=action_profile_id,json=actionProfileId,proto3" json:"action_profile_id,omitempty"`
	GroupId         uint32                       `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Members         []*ActionProfileGroup_Member `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
	MaxSize         int32                        `protobuf:"varint,4,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
}

func (x *ActionProfileGroup) Reset() {
	*x = ActionProfileGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionProfileGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionProfileGroup) ProtoMessage() {}

func (x *ActionProfileGroup) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionProfileGroup.ProtoReflect.Descriptor instead.
func (*ActionProfileGroup) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{13}
}

func (x *ActionProfileGroup) GetActionProfileId() uint32 {
	if x != nil {
		return x.ActionProfileId
	}
	return 0
}

func (x *ActionProfileGroup) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ActionProfileGroup) GetMembers() []*ActionProfileGroup_Member {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ActionProfileGroup) GetMaxSize() int32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

type Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *Index) Reset() {
	*x = Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Index.ProtoReflect.Descriptor instead.
func (*Index) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{14}
}

func (x *Index) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type MeterEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeterId uint32       `protobuf:"varint,1,opt,name=meter_id,json=meterId,proto3" json:"meter_id,omitempty"`
	Index   *Index       `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Config  *MeterConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *MeterEntry) Reset() {
	*x = MeterEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeterEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeterEntry) ProtoMessage() {}

func (x *MeterEntry) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeterEntry.ProtoReflect.Descriptor instead.
func (*MeterEntry) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{15}
}

func (x *MeterEntry) GetMeterId() uint32 {
	if x != nil {
		return x.MeterId
	}
	return 0
}

func (x *MeterEntry) GetIndex() *Index {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *MeterEntry) GetConfig() *MeterConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type DirectMeterEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableEntry *TableEntry  `protobuf:"bytes,1,opt,name=table_entry,json=tableEntry,proto3" json:"table_entry,omitempty"`
	Config     *MeterConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *DirectMeterEntry) Reset() {
	*x = DirectMeterEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectMeterEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectMeterEntry) ProtoMessage() {}

func (x *DirectMeterEntry) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectMeterEntry.ProtoReflect.Descriptor instead.
func (*DirectMeterEntry) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{16}
}

func (x *DirectMeterEntry) GetTableEntry() *TableEntry {
	if x != nil {
		return x.TableEntry
	}
	return nil
}

func (x *DirectMeterEntry) GetConfig() *MeterConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type MeterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cir    int64 `protobuf:"varint,1,opt,name=cir,proto3" json:"cir,omitempty"`
	Cburst int64 `protobuf:"varint,2,opt,name=cburst,proto3" json:"cburst,omitempty"`
	Pir    int64 `protobuf:"varint,3,opt,name=pir,proto3" json:"pir,omitempty"`
	Pburst int64 `protobuf:"varint,4,opt,name=pburst,proto3" json:"pburst,omitempty"`
}

func (x *MeterConfig) Reset() {
	*x = MeterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeterConfig) ProtoMessage() {}

func (x *MeterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeterConfig.ProtoReflect.Descriptor instead.
func (*MeterConfig) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{17}
}

func (x *MeterConfig) GetCir() int64 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *MeterConfig) GetCburst() int64 {
	if x != nil {
		return x.Cburst
	}
	return 0
}

func (x *MeterConfig) GetPir() int64 {
	if x != nil {
		return x.Pir
	}
	return 0
}

func (x *MeterConfig) GetPburst() int64 {
	if x != nil {
		return x.Pburst
	}
	return 0
}

type CounterEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CounterId uint32       `protobuf:"varint,1,opt,name=counter_id,json=counterId,proto3" json:"counter_id,omitempty"`
	Index     *Index       `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Data      *CounterData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CounterEntry) Reset() {
	*x = CounterEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CounterEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterEntry) ProtoMessage() {}

func (x *CounterEntry) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CounterEntry.ProtoReflect.Descriptor instead.
func (*CounterEntry) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{18}
}

func (x *CounterEntry) GetCounterId() uint32 {
	if x != nil {
		return x.CounterId
	}
	return 0
}

func (x *CounterEntry) GetIndex() *Index {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *CounterEntry) GetData() *CounterData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DirectCounterEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableEntry *TableEntry  `protobuf:"bytes,1,opt,name=table_entry,json=tableEntry,proto3" json:"table_entry,omitempty"`
	Data       *CounterData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DirectCounterEntry) Reset() {
	*x = DirectCounterEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectCounterEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectCounterEntry) ProtoMessage() {}

func (x *DirectCounterEntry) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectCounterEntry.ProtoReflect.Descriptor instead.
func (*DirectCounterEntry) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{19}
}

func (x *DirectCounterEntry) GetTableEntry() *TableEntry {
	if x != nil {
		return x.TableEntry
	}
	return nil
}

func (x *DirectCounterEntry) GetData() *CounterData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CounterData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByteCount   int64 `protobuf:"varint,1,opt,name=byte_count,json=byteCount,proto3" json:"byte_count,omitempty"`
	PacketCount int64 `protobuf:"varint,2,opt,name=packet_count,json=packetCount,proto3" json:"packet_count,omitempty"`
}

func (x *CounterData) Reset() {
	*x = CounterData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CounterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterData) ProtoMessage() {}

func (x *CounterData) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CounterData.ProtoReflect.Descriptor instead.
func (*CounterData) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{20}
}

func (x *CounterData) GetByteCount() int64 {
	if x != nil {
		return x.ByteCount
	}
	return 0
}

func (x *CounterData) GetPacketCount() int64 {
	if x != nil {
		return x.PacketCount
	}
	return 0
}

type PacketReplicationEngineEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*PacketReplicationEngineEntry_MulticastGroupEntry
	//	*PacketReplicationEngineEntry_CloneSessionEntry
	Type isPacketReplicationEngineEntry_Type `protobuf_oneof:"type"`
}

func (x *PacketReplicationEngineEntry) Reset() {
	*x = PacketReplicationEngineEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketReplicationEngineEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketReplicationEngineEntry) ProtoMessage() {}

func (x *PacketReplicationEngineEntry) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketReplicationEngineEntry.ProtoReflect.Descriptor instead.
func (*PacketReplicationEngineEntry) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{21}
}

func (m *PacketReplicationEngineEntry) GetType() isPacketReplicationEngineEntry_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *PacketReplicationEngineEntry) GetMulticastGroupEntry() *MulticastGroupEntry {
	if x, ok := x.GetType().(*PacketReplicationEngineEntry_MulticastGroupEntry); ok {
		return x.MulticastGroupEntry
	}
	return nil
}

func (x *PacketReplicationEngineEntry) GetCloneSessionEntry() *CloneSessionEntry {
	if x, ok := x.GetType().(*PacketReplicationEngineEntry_CloneSessionEntry); ok {
		return x.CloneSessionEntry
	}
	return nil
}

type isPacketReplicationEngineEntry_Type interface {
	isPacketReplicationEngineEntry_Type()
}

type PacketReplicationEngineEntry_MulticastGroupEntry struct {
	MulticastGroupEntry *MulticastGroupEntry `protobuf:"bytes,1,opt,name=multicast_group_entry,json=multicastGroupEntry,proto3,oneof"`
}

type PacketReplicationEngineEntry_CloneSessionEntry struct {
	CloneSessionEntry *CloneSessionEntry `protobuf:"bytes,2,opt,name=clone_session_entry,json=cloneSessionEntry,proto3,oneof"`
}

func (*PacketReplicationEngineEntry_MulticastGroupEntry) isPacketReplicationEngineEntry_Type() {}

func (*PacketReplicationEngineEntry_CloneSessionEntry) isPacketReplicationEngineEntry_Type() {}

type Replica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EgressPort uint32 `protobuf:"varint,1,opt,name=egress_port,json=egressPort,proto3" json:"egress_port,omitempty"`
	Instance   uint32 `protobuf:"varint,2,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *Replica) Reset() {
	*x = Replica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Replica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Replica) ProtoMessage() {}

func (x *Replica) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Replica.ProtoReflect.Descriptor instead.
func (*Replica) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{22}
}

func (x *Replica) GetEgressPort() uint32 {
	if x != nil {
		return x.EgressPort
	}
	return 0
}

func (x *Replica) GetInstance() uint32 {
	if x != nil {
		return x.Instance
	}
	return 0
}

type MulticastGroupEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MulticastGroupId uint32     `protobuf:"varint,1,opt,name=multicast_group_id,json=multicastGroupId,proto3" json:"multicast_group_id,omitempty"`
	Replicas         []*Replica `protobuf:"bytes,2,rep,name=replicas,proto3" json:"replicas,omitempty"`
}

func (x *MulticastGroupEntry) Reset() {
	*x = MulticastGroupEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MulticastGroupEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MulticastGroupEntry) ProtoMessage() {}

func (x *MulticastGroupEntry) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MulticastGroupEntry.ProtoReflect.Descriptor instead.
func (*MulticastGroupEntry) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{23}
}

func (x *MulticastGroupEntry) GetMulticastGroupId() uint32 {
	if x != nil {
		return x.MulticastGroupId
	}
	return 0
}

func (x *MulticastGroupEntry) GetReplicas() []*Replica {
	if x != nil {
		return x.Replicas
	}
	return nil
}

type CloneSessionEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId         uint32     `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Replicas          []*Replica `protobuf:"bytes,2,rep,name=replicas,proto3" json:"replicas,omitempty"`
	ClassOfService    uint32     `protobuf:"varint,3,opt,name=class_of_service,json=classOfService,proto3" json:"class_of_service,omitempty"`
	PacketLengthBytes int32      `protobuf:"varint,4,opt,name=packet_length_bytes,json=packetLengthBytes,proto3" json:"packet_length_bytes,omitempty"`
}

func (x *CloneSessionEntry) Reset() {
	*x = CloneSessionEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneSessionEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneSessionEntry) ProtoMessage() {}

func (x *CloneSessionEntry) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneSessionEntry.ProtoReflect.Descriptor instead.
func (*CloneSessionEntry) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{24}
}

func (x *CloneSessionEntry) GetSessionId() uint32 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *CloneSessionEntry) GetReplicas() []*Replica {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *CloneSessionEntry) GetClassOfService() uint32 {
	if x != nil {
		return x.ClassOfService
	}
	return 0
}

func (x *CloneSessionEntry) GetPacketLengthBytes() int32 {
	if x != nil {
		return x.PacketLengthBytes
	}
	return 0
}

type ValueSetMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match []*FieldMatch `protobuf:"bytes,1,rep,name=match,proto3" json:"match,omitempty"`
}

func (x *ValueSetMember) Reset() {
	*x = ValueSetMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueSetMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueSetMember) ProtoMessage() {}

func (x *ValueSetMember) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueSetMember.ProtoReflect.Descriptor instead.
func (*ValueSetMember) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{25}
}

func (x *ValueSetMember) GetMatch() []*FieldMatch {
	if x != nil {
		return x.Match
	}
	return nil
}

type ValueSetEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueSetId uint32            `protobuf:"varint,1,opt,name=value_set_id,json=valueSetId,proto3" json:"value_set_id,omitempty"`
	Members    []*ValueSetMember `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *ValueSetEntry) Reset() {
	*x = ValueSetEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueSetEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueSetEntry) ProtoMessage() {}

func (x *ValueSetEntry) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueSetEntry.ProtoReflect.Descriptor instead.
func (*ValueSetEntry) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{26}
}

func (x *ValueSetEntry) GetValueSetId() uint32 {
	if x != nil {
		return x.ValueSetId
	}
	return 0
}

func (x *ValueSetEntry) GetMembers() []*ValueSetMember {
	if x != nil {
		return x.Members
	}
	return nil
}

type RegisterEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterId uint32  `protobuf:"varint,1,opt,name=register_id,json=registerId,proto3" json:"register_id,omitempty"`
	Index      *Index  `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Data       *P4Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RegisterEntry) Reset() {
	*x = RegisterEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterEntry) ProtoMessage() {}

func (x *RegisterEntry) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterEntry.ProtoReflect.Descriptor instead.
func (*RegisterEntry) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{27}
}

func (x *RegisterEntry) GetRegisterId() uint32 {
	if x != nil {
		return x.RegisterId
	}
	return 0
}

func (x *RegisterEntry) GetIndex() *Index {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *RegisterEntry) GetData() *P4Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DigestEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DigestId uint32              `protobuf:"varint,1,opt,name=digest_id,json=digestId,proto3" json:"digest_id,omitempty"`
	Config   *DigestEntry_Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *DigestEntry) Reset() {
	*x = DigestEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestEntry) ProtoMessage() {}

func (x *DigestEntry) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestEntry.ProtoReflect.Descriptor instead.
func (*DigestEntry) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{28}
}

func (x *DigestEntry) GetDigestId() uint32 {
	if x != nil {
		return x.DigestId
	}
	return 0
}

func (x *DigestEntry) GetConfig() *DigestEntry_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type StreamMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Update:
	//	*StreamMessageRequest_Arbitration
	//	*StreamMessageRequest_Packet
	//	*StreamMessageRequest_DigestAck
	//	*StreamMessageRequest_Other
	Update isStreamMessageRequest_Update `protobuf_oneof:"update"`
}

func (x *StreamMessageRequest) Reset() {
	*x = StreamMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageRequest) ProtoMessage() {}

func (x *StreamMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageRequest.ProtoReflect.Descriptor instead.
func (*StreamMessageRequest) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{29}
}

func (m *StreamMessageRequest) GetUpdate() isStreamMessageRequest_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *StreamMessageRequest) GetArbitration() *MasterArbitrationUpdate {
	if x, ok := x.GetUpdate().(*StreamMessageRequest_Arbitration); ok {
		return x.Arbitration
	}
	return nil
}

func (x *StreamMessageRequest) GetPacket() *PacketOut {
	if x, ok := x.GetUpdate().(*StreamMessageRequest_Packet); ok {
		return x.Packet
	}
	return nil
}

func (x *StreamMessageRequest) GetDigestAck() *DigestListAck {
	if x, ok := x.GetUpdate().(*StreamMessageRequest_DigestAck); ok {
		return x.DigestAck
	}
	return nil
}

func (x *StreamMessageRequest) GetOther() *any.Any {
	if x, ok := x.GetUpdate().(*StreamMessageRequest_Other); ok {
		return x.Other
	}
	return nil
}

type isStreamMessageRequest_Update interface {
	isStreamMessageRequest_Update()
}

type StreamMessageRequest_Arbitration struct {
	Arbitration *MasterArbitrationUpdate `protobuf:"bytes,1,opt,name=arbitration,proto3,oneof"`
}

type StreamMessageRequest_Packet struct {
	Packet *PacketOut `protobuf:"bytes,2,opt,name=packet,proto3,oneof"`
}

type StreamMessageRequest_DigestAck struct {
	DigestAck *DigestListAck `protobuf:"bytes,3,opt,name=digest_ack,json=digestAck,proto3,oneof"`
}

type StreamMessageRequest_Other struct {
	Other *any.Any `protobuf:"bytes,4,opt,name=other,proto3,oneof"`
}

func (*StreamMessageRequest_Arbitration) isStreamMessageRequest_Update() {}

func (*StreamMessageRequest_Packet) isStreamMessageRequest_Update() {}

func (*StreamMessageRequest_DigestAck) isStreamMessageRequest_Update() {}

func (*StreamMessageRequest_Other) isStreamMessageRequest_Update() {}

type PacketOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload  []byte            `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Metadata []*PacketMetadata `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *PacketOut) Reset() {
	*x = PacketOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketOut) ProtoMessage() {}

func (x *PacketOut) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketOut.ProtoReflect.Descriptor instead.
func (*PacketOut) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{30}
}

func (x *PacketOut) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *PacketOut) GetMetadata() []*PacketMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DigestListAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DigestId uint32 `protobuf:"varint,1,opt,name=digest_id,json=digestId,proto3" json:"digest_id,omitempty"`
	ListId   uint64 `protobuf:"varint,2,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
}

func (x *DigestListAck) Reset() {
	*x = DigestListAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestListAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestListAck) ProtoMessage() {}

func (x *DigestListAck) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestListAck.ProtoReflect.Descriptor instead.
func (*DigestListAck) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{31}
}

func (x *DigestListAck) GetDigestId() uint32 {
	if x != nil {
		return x.DigestId
	}
	return 0
}

func (x *DigestListAck) GetListId() uint64 {
	if x != nil {
		return x.ListId
	}
	return 0
}

type StreamMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Update:
	//	*StreamMessageResponse_Arbitration
	//	*StreamMessageResponse_Packet
	//	*StreamMessageResponse_Digest
	//	*StreamMessageResponse_IdleTimeoutNotification
	//	*StreamMessageResponse_Other
	//	*StreamMessageResponse_Error
	Update isStreamMessageResponse_Update `protobuf_oneof:"update"`
}

func (x *StreamMessageResponse) Reset() {
	*x = StreamMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageResponse) ProtoMessage() {}

func (x *StreamMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageResponse.ProtoReflect.Descriptor instead.
func (*StreamMessageResponse) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{32}
}

func (m *StreamMessageResponse) GetUpdate() isStreamMessageResponse_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *StreamMessageResponse) GetArbitration() *MasterArbitrationUpdate {
	if x, ok := x.GetUpdate().(*StreamMessageResponse_Arbitration); ok {
		return x.Arbitration
	}
	return nil
}

func (x *StreamMessageResponse) GetPacket() *PacketIn {
	if x, ok := x.GetUpdate().(*StreamMessageResponse_Packet); ok {
		return x.Packet
	}
	return nil
}

func (x *StreamMessageResponse) GetDigest() *DigestList {
	if x, ok := x.GetUpdate().(*StreamMessageResponse_Digest); ok {
		return x.Digest
	}
	return nil
}

func (x *StreamMessageResponse) GetIdleTimeoutNotification() *IdleTimeoutNotification {
	if x, ok := x.GetUpdate().(*StreamMessageResponse_IdleTimeoutNotification); ok {
		return x.IdleTimeoutNotification
	}
	return nil
}

func (x *StreamMessageResponse) GetOther() *any.Any {
	if x, ok := x.GetUpdate().(*StreamMessageResponse_Other); ok {
		return x.Other
	}
	return nil
}

func (x *StreamMessageResponse) GetError() *StreamError {
	if x, ok := x.GetUpdate().(*StreamMessageResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isStreamMessageResponse_Update interface {
	isStreamMessageResponse_Update()
}

type StreamMessageResponse_Arbitration struct {
	Arbitration *MasterArbitrationUpdate `protobuf:"bytes,1,opt,name=arbitration,proto3,oneof"`
}

type StreamMessageResponse_Packet struct {
	Packet *PacketIn `protobuf:"bytes,2,opt,name=packet,proto3,oneof"`
}

type StreamMessageResponse_Digest struct {
	Digest *DigestList `protobuf:"bytes,3,opt,name=digest,proto3,oneof"`
}

type StreamMessageResponse_IdleTimeoutNotification struct {
	IdleTimeoutNotification *IdleTimeoutNotification `protobuf:"bytes,4,opt,name=idle_timeout_notification,json=idleTimeoutNotification,proto3,oneof"`
}

type StreamMessageResponse_Other struct {
	Other *any.Any `protobuf:"bytes,5,opt,name=other,proto3,oneof"`
}

type StreamMessageResponse_Error struct {
	Error *StreamError `protobuf:"bytes,6,opt,name=error,proto3,oneof"`
}

func (*StreamMessageResponse_Arbitration) isStreamMessageResponse_Update() {}

func (*StreamMessageResponse_Packet) isStreamMessageResponse_Update() {}

func (*StreamMessageResponse_Digest) isStreamMessageResponse_Update() {}

func (*StreamMessageResponse_IdleTimeoutNotification) isStreamMessageResponse_Update() {}

func (*StreamMessageResponse_Other) isStreamMessageResponse_Update() {}

func (*StreamMessageResponse_Error) isStreamMessageResponse_Update() {}

type PacketIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload  []byte            `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Metadata []*PacketMetadata `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *PacketIn) Reset() {
	*x = PacketIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketIn) ProtoMessage() {}

func (x *PacketIn) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketIn.ProtoReflect.Descriptor instead.
func (*PacketIn) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{33}
}

func (x *PacketIn) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *PacketIn) GetMetadata() []*PacketMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DigestList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DigestId  uint32    `protobuf:"varint,1,opt,name=digest_id,json=digestId,proto3" json:"digest_id,omitempty"`
	ListId    uint64    `protobuf:"varint,2,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	Data      []*P4Data `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Timestamp int64     `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *DigestList) Reset() {
	*x = DigestList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestList) ProtoMessage() {}

func (x *DigestList) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestList.ProtoReflect.Descriptor instead.
func (*DigestList) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{34}
}

func (x *DigestList) GetDigestId() uint32 {
	if x != nil {
		return x.DigestId
	}
	return 0
}

func (x *DigestList) GetListId() uint64 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *DigestList) GetData() []*P4Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DigestList) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type PacketMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetadataId uint32 `protobuf:"varint,1,opt,name=metadata_id,json=metadataId,proto3" json:"metadata_id,omitempty"`
	Value      []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PacketMetadata) Reset() {
	*x = PacketMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketMetadata) ProtoMessage() {}

func (x *PacketMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketMetadata.ProtoReflect.Descriptor instead.
func (*PacketMetadata) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{35}
}

func (x *PacketMetadata) GetMetadataId() uint32 {
	if x != nil {
		return x.MetadataId
	}
	return 0
}

func (x *PacketMetadata) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type MasterArbitrationUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId   uint64   `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Role       *Role    `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	ElectionId *Uint128 `protobuf:"bytes,3,opt,name=election_id,json=electionId,proto3" json:"election_id,omitempty"`
	Status     *Status  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MasterArbitrationUpdate) Reset() {
	*x = MasterArbitrationUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterArbitrationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterArbitrationUpdate) ProtoMessage() {}

func (x *MasterArbitrationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterArbitrationUpdate.ProtoReflect.Descriptor instead.
func (*MasterArbitrationUpdate) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{36}
}

func (x *MasterArbitrationUpdate) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *MasterArbitrationUpdate) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *MasterArbitrationUpdate) GetElectionId() *Uint128 {
	if x != nil {
		return x.ElectionId
	}
	return nil
}

func (x *MasterArbitrationUpdate) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Id     uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Config *any.Any `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{37}
}

// Deprecated: Do not use.
func (x *Role) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetConfig() *any.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

type IdleTimeoutNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableEntry []*TableEntry `protobuf:"bytes,1,rep,name=table_entry,json=tableEntry,proto3" json:"table_entry,omitempty"`
	Timestamp  int64         `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *IdleTimeoutNotification) Reset() {
	*x = IdleTimeoutNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdleTimeoutNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdleTimeoutNotification) ProtoMessage() {}

func (x *IdleTimeoutNotification) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdleTimeoutNotification.ProtoReflect.Descriptor instead.
func (*IdleTimeoutNotification) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{38}
}

func (x *IdleTimeoutNotification) GetTableEntry() []*TableEntry {
	if x != nil {
		return x.TableEntry
	}
	return nil
}

func (x *IdleTimeoutNotification) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type StreamError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanonicalCode int32  `protobuf:"varint,1,opt,name=canonical_code,json=canonicalCode,proto3" json:"canonical_code,omitempty"`
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Space         string `protobuf:"bytes,3,opt,name=space,proto3" json:"space,omitempty"`
	Code          int32  `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	// Types that are assignable to Details:
	//	*StreamError_PacketOut
	//	*StreamError_DigestListAck
	//	*StreamError_Other
	Details isStreamError_Details `protobuf_oneof:"details"`
}

func (x *StreamError) Reset() {
	*x = StreamError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamError) ProtoMessage() {}

func (x *StreamError) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamError.ProtoReflect.Descriptor instead.
func (*StreamError) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{39}
}

func (x *StreamError) GetCanonicalCode() int32 {
	if x != nil {
		return x.CanonicalCode
	}
	return 0
}

func (x *StreamError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StreamError) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *StreamError) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (m *StreamError) GetDetails() isStreamError_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *StreamError) GetPacketOut() *PacketOutError {
	if x, ok := x.GetDetails().(*StreamError_PacketOut); ok {
		return x.PacketOut
	}
	return nil
}

func (x *StreamError) GetDigestListAck() *DigestListAckError {
	if x, ok := x.GetDetails().(*StreamError_DigestListAck); ok {
		return x.DigestListAck
	}
	return nil
}

func (x *StreamError) GetOther() *StreamOtherError {
	if x, ok := x.GetDetails().(*StreamError_Other); ok {
		return x.Other
	}
	return nil
}

type isStreamError_Details interface {
	isStreamError_Details()
}

type StreamError_PacketOut struct {
	PacketOut *PacketOutError `protobuf:"bytes,5,opt,name=packet_out,json=packetOut,proto3,oneof"`
}

type StreamError_DigestListAck struct {
	DigestListAck *DigestListAckError `protobuf:"bytes,6,opt,name=digest_list_ack,json=digestListAck,proto3,oneof"`
}

type StreamError_Other struct {
	Other *StreamOtherError `protobuf:"bytes,7,opt,name=other,proto3,oneof"`
}

func (*StreamError_PacketOut) isStreamError_Details() {}

func (*StreamError_DigestListAck) isStreamError_Details() {}

func (*StreamError_Other) isStreamError_Details() {}

type PacketOutError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketOut *PacketOut `protobuf:"bytes,1,opt,name=packet_out,json=packetOut,proto3" json:"packet_out,omitempty"`
}

func (x *PacketOutError) Reset() {
	*x = PacketOutError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketOutError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketOutError) ProtoMessage() {}

func (x *PacketOutError) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketOutError.ProtoReflect.Descriptor instead.
func (*PacketOutError) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{40}
}

func (x *PacketOutError) GetPacketOut() *PacketOut {
	if x != nil {
		return x.PacketOut
	}
	return nil
}

type DigestListAckError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DigestListAck *DigestListAck `protobuf:"bytes,1,opt,name=digest_list_ack,json=digestListAck,proto3" json:"digest_list_ack,omitempty"`
}

func (x *DigestListAckError) Reset() {
	*x = DigestListAckError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestListAckError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestListAckError) ProtoMessage() {}

func (x *DigestListAckError) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestListAckError.ProtoReflect.Descriptor instead.
func (*DigestListAckError) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{41}
}

func (x *DigestListAckError) GetDigestListAck() *DigestListAck {
	if x != nil {
		return x.DigestListAck
	}
	return nil
}

type StreamOtherError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Other *any.Any `protobuf:"bytes,1,opt,name=other,proto3" json:"other,omitempty"`
}

func (x *StreamOtherError) Reset() {
	*x = StreamOtherError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamOtherError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamOtherError) ProtoMessage() {}

func (x *StreamOtherError) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamOtherError.ProtoReflect.Descriptor instead.
func (*StreamOtherError) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{42}
}

func (x *StreamOtherError) GetOther() *any.Any {
	if x != nil {
		return x.Other
	}
	return nil
}

type Uint128 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	High uint64 `protobuf:"varint,1,opt,name=high,proto3" json:"high,omitempty"`
	Low  uint64 `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
}

func (x *Uint128) Reset() {
	*x = Uint128{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uint128) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint128) ProtoMessage() {}

func (x *Uint128) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint128.ProtoReflect.Descriptor instead.
func (*Uint128) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{43}
}

func (x *Uint128) GetHigh() uint64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Uint128) GetLow() uint64 {
	if x != nil {
		return x.Low
	}
	return 0
}

type SetForwardingPipelineConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId uint64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// Deprecated: Do not use.
	RoleId     uint64                                    `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Role       string                                    `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	ElectionId *Uint128                                  `protobuf:"bytes,3,opt,name=election_id,json=electionId,proto3" json:"election_id,omitempty"`
	Action     SetForwardingPipelineConfigRequest_Action `protobuf:"varint,4,opt,name=action,proto3,enum=pb.SetForwardingPipelineConfigRequest_Action" json:"action,omitempty"`
	Config     *ForwardingPipelineConfig                 `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *SetForwardingPipelineConfigRequest) Reset() {
	*x = SetForwardingPipelineConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetForwardingPipelineConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetForwardingPipelineConfigRequest) ProtoMessage() {}

func (x *SetForwardingPipelineConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetForwardingPipelineConfigRequest.ProtoReflect.Descriptor instead.
func (*SetForwardingPipelineConfigRequest) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{44}
}

func (x *SetForwardingPipelineConfigRequest) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

// Deprecated: Do not use.
func (x *SetForwardingPipelineConfigRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *SetForwardingPipelineConfigRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *SetForwardingPipelineConfigRequest) GetElectionId() *Uint128 {
	if x != nil {
		return x.ElectionId
	}
	return nil
}

func (x *SetForwardingPipelineConfigRequest) GetAction() SetForwardingPipelineConfigRequest_Action {
	if x != nil {
		return x.Action
	}
	return SetForwardingPipelineConfigRequest_UNSPECIFIED
}

func (x *SetForwardingPipelineConfigRequest) GetConfig() *ForwardingPipelineConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetForwardingPipelineConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetForwardingPipelineConfigResponse) Reset() {
	*x = SetForwardingPipelineConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetForwardingPipelineConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetForwardingPipelineConfigResponse) ProtoMessage() {}

func (x *SetForwardingPipelineConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetForwardingPipelineConfigResponse.ProtoReflect.Descriptor instead.
func (*SetForwardingPipelineConfigResponse) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{45}
}

type ForwardingPipelineConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	P4Info         *P4Info                          `protobuf:"bytes,1,opt,name=p4info,proto3" json:"p4info,omitempty"`
	P4DeviceConfig []byte                           `protobuf:"bytes,2,opt,name=p4_device_config,json=p4DeviceConfig,proto3" json:"p4_device_config,omitempty"`
	Cookie         *ForwardingPipelineConfig_Cookie `protobuf:"bytes,3,opt,name=cookie,proto3" json:"cookie,omitempty"`
}

func (x *ForwardingPipelineConfig) Reset() {
	*x = ForwardingPipelineConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardingPipelineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardingPipelineConfig) ProtoMessage() {}

func (x *ForwardingPipelineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardingPipelineConfig.ProtoReflect.Descriptor instead.
func (*ForwardingPipelineConfig) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{46}
}

func (x *ForwardingPipelineConfig) GetP4Info() *P4Info {
	if x != nil {
		return x.P4Info
	}
	return nil
}

func (x *ForwardingPipelineConfig) GetP4DeviceConfig() []byte {
	if x != nil {
		return x.P4DeviceConfig
	}
	return nil
}

func (x *ForwardingPipelineConfig) GetCookie() *ForwardingPipelineConfig_Cookie {
	if x != nil {
		return x.Cookie
	}
	return nil
}

type GetForwardingPipelineConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId     uint64                                          `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ResponseType GetForwardingPipelineConfigRequest_ResponseType `protobuf:"varint,2,opt,name=response_type,json=responseType,proto3,enum=pb.GetForwardingPipelineConfigRequest_ResponseType" json:"response_type,omitempty"`
}

func (x *GetForwardingPipelineConfigRequest) Reset() {
	*x = GetForwardingPipelineConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForwardingPipelineConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForwardingPipelineConfigRequest) ProtoMessage() {}

func (x *GetForwardingPipelineConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForwardingPipelineConfigRequest.ProtoReflect.Descriptor instead.
func (*GetForwardingPipelineConfigRequest) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{47}
}

func (x *GetForwardingPipelineConfigRequest) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *GetForwardingPipelineConfigRequest) GetResponseType() GetForwardingPipelineConfigRequest_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return GetForwardingPipelineConfigRequest_ALL
}

type GetForwardingPipelineConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *ForwardingPipelineConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetForwardingPipelineConfigResponse) Reset() {
	*x = GetForwardingPipelineConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForwardingPipelineConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForwardingPipelineConfigResponse) ProtoMessage() {}

func (x *GetForwardingPipelineConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForwardingPipelineConfigResponse.ProtoReflect.Descriptor instead.
func (*GetForwardingPipelineConfigResponse) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{48}
}

func (x *GetForwardingPipelineConfigResponse) GetConfig() *ForwardingPipelineConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanonicalCode int32    `protobuf:"varint,1,opt,name=canonical_code,json=canonicalCode,proto3" json:"canonical_code,omitempty"`
	Message       string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Space         string   `protobuf:"bytes,3,opt,name=space,proto3" json:"space,omitempty"`
	Code          int32    `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Details       *any.Any `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{49}
}

func (x *Error) GetCanonicalCode() int32 {
	if x != nil {
		return x.CanonicalCode
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetDetails() *any.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

type CapabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CapabilitiesRequest) Reset() {
	*x = CapabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilitiesRequest) ProtoMessage() {}

func (x *CapabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilitiesRequest.ProtoReflect.Descriptor instead.
func (*CapabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{50}
}

type CapabilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	P4RuntimeApiVersion string `protobuf:"bytes,1,opt,name=p4runtime_api_version,json=p4runtimeApiVersion,proto3" json:"p4runtime_api_version,omitempty"`
}

func (x *CapabilitiesResponse) Reset() {
	*x = CapabilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilitiesResponse) ProtoMessage() {}

func (x *CapabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilitiesResponse.ProtoReflect.Descriptor instead.
func (*CapabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{51}
}

func (x *CapabilitiesResponse) GetP4RuntimeApiVersion() string {
	if x != nil {
		return x.P4RuntimeApiVersion
	}
	return ""
}

type TableEntry_IdleTimeout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ElapsedNs int64 `protobuf:"varint,1,opt,name=elapsed_ns,json=elapsedNs,proto3" json:"elapsed_ns,omitempty"`
}

func (x *TableEntry_IdleTimeout) Reset() {
	*x = TableEntry_IdleTimeout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableEntry_IdleTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableEntry_IdleTimeout) ProtoMessage() {}

func (x *TableEntry_IdleTimeout) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableEntry_IdleTimeout.ProtoReflect.Descriptor instead.
func (*TableEntry_IdleTimeout) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{7, 0}
}

func (x *TableEntry_IdleTimeout) GetElapsedNs() int64 {
	if x != nil {
		return x.ElapsedNs
	}
	return 0
}

type FieldMatch_Exact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FieldMatch_Exact) Reset() {
	*x = FieldMatch_Exact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldMatch_Exact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMatch_Exact) ProtoMessage() {}

func (x *FieldMatch_Exact) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMatch_Exact.ProtoReflect.Descriptor instead.
func (*FieldMatch_Exact) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{8, 0}
}

func (x *FieldMatch_Exact) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type FieldMatch_Ternary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Mask  []byte `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *FieldMatch_Ternary) Reset() {
	*x = FieldMatch_Ternary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldMatch_Ternary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMatch_Ternary) ProtoMessage() {}

func (x *FieldMatch_Ternary) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMatch_Ternary.ProtoReflect.Descriptor instead.
func (*FieldMatch_Ternary) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{8, 1}
}

func (x *FieldMatch_Ternary) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *FieldMatch_Ternary) GetMask() []byte {
	if x != nil {
		return x.Mask
	}
	return nil
}

type FieldMatch_LPM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	PrefixLen int32  `protobuf:"varint,2,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
}

func (x *FieldMatch_LPM) Reset() {
	*x = FieldMatch_LPM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldMatch_LPM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMatch_LPM) ProtoMessage() {}

func (x *FieldMatch_LPM) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMatch_LPM.ProtoReflect.Descriptor instead.
func (*FieldMatch_LPM) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{8, 2}
}

func (x *FieldMatch_LPM) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *FieldMatch_LPM) GetPrefixLen() int32 {
	if x != nil {
		return x.PrefixLen
	}
	return 0
}

type FieldMatch_Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Low  []byte `protobuf:"bytes,1,opt,name=low,proto3" json:"low,omitempty"`
	High []byte `protobuf:"bytes,2,opt,name=high,proto3" json:"high,omitempty"`
}

func (x *FieldMatch_Range) Reset() {
	*x = FieldMatch_Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldMatch_Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMatch_Range) ProtoMessage() {}

func (x *FieldMatch_Range) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMatch_Range.ProtoReflect.Descriptor instead.
func (*FieldMatch_Range) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{8, 3}
}

func (x *FieldMatch_Range) GetLow() []byte {
	if x != nil {
		return x.Low
	}
	return nil
}

func (x *FieldMatch_Range) GetHigh() []byte {
	if x != nil {
		return x.High
	}
	return nil
}

// If the Optional match should be a wildcard, the FieldMatch must be omitted.
// Otherwise, this behaves like an exact match.
type FieldMatch_Optional struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FieldMatch_Optional) Reset() {
	*x = FieldMatch_Optional{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldMatch_Optional) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMatch_Optional) ProtoMessage() {}

func (x *FieldMatch_Optional) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMatch_Optional.ProtoReflect.Descriptor instead.
func (*FieldMatch_Optional) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{8, 4}
}

func (x *FieldMatch_Optional) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ActionProfileGroup_Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId uint32 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Weight   int32  `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	// Types that are assignable to WatchKind:
	//	*ActionProfileGroup_Member_Watch
	//	*ActionProfileGroup_Member_WatchPort
	WatchKind isActionProfileGroup_Member_WatchKind `protobuf_oneof:"watch_kind"`
}

func (x *ActionProfileGroup_Member) Reset() {
	*x = ActionProfileGroup_Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionProfileGroup_Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionProfileGroup_Member) ProtoMessage() {}

func (x *ActionProfileGroup_Member) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionProfileGroup_Member.ProtoReflect.Descriptor instead.
func (*ActionProfileGroup_Member) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ActionProfileGroup_Member) GetMemberId() uint32 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *ActionProfileGroup_Member) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (m *ActionProfileGroup_Member) GetWatchKind() isActionProfileGroup_Member_WatchKind {
	if m != nil {
		return m.WatchKind
	}
	return nil
}

// Deprecated: Do not use.
func (x *ActionProfileGroup_Member) GetWatch() int32 {
	if x, ok := x.GetWatchKind().(*ActionProfileGroup_Member_Watch); ok {
		return x.Watch
	}
	return 0
}

func (x *ActionProfileGroup_Member) GetWatchPort() []byte {
	if x, ok := x.GetWatchKind().(*ActionProfileGroup_Member_WatchPort); ok {
		return x.WatchPort
	}
	return nil
}

type isActionProfileGroup_Member_WatchKind interface {
	isActionProfileGroup_Member_WatchKind()
}

type ActionProfileGroup_Member_Watch struct {
	// Deprecated: Do not use.
	Watch int32 `protobuf:"varint,3,opt,name=watch,proto3,oneof"`
}

type ActionProfileGroup_Member_WatchPort struct {
	WatchPort []byte `protobuf:"bytes,4,opt,name=watch_port,json=watchPort,proto3,oneof"`
}

func (*ActionProfileGroup_Member_Watch) isActionProfileGroup_Member_WatchKind() {}

func (*ActionProfileGroup_Member_WatchPort) isActionProfileGroup_Member_WatchKind() {}

type DigestEntry_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxTimeoutNs int64 `protobuf:"varint,1,opt,name=max_timeout_ns,json=maxTimeoutNs,proto3" json:"max_timeout_ns,omitempty"`
	MaxListSize  int32 `protobuf:"varint,2,opt,name=max_list_size,json=maxListSize,proto3" json:"max_list_size,omitempty"`
	AckTimeoutNs int64 `protobuf:"varint,3,opt,name=ack_timeout_ns,json=ackTimeoutNs,proto3" json:"ack_timeout_ns,omitempty"`
}

func (x *DigestEntry_Config) Reset() {
	*x = DigestEntry_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestEntry_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestEntry_Config) ProtoMessage() {}

func (x *DigestEntry_Config) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestEntry_Config.ProtoReflect.Descriptor instead.
func (*DigestEntry_Config) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{28, 0}
}

func (x *DigestEntry_Config) GetMaxTimeoutNs() int64 {
	if x != nil {
		return x.MaxTimeoutNs
	}
	return 0
}

func (x *DigestEntry_Config) GetMaxListSize() int32 {
	if x != nil {
		return x.MaxListSize
	}
	return 0
}

func (x *DigestEntry_Config) GetAckTimeoutNs() int64 {
	if x != nil {
		return x.AckTimeoutNs
	}
	return 0
}

type ForwardingPipelineConfig_Cookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookie uint64 `protobuf:"varint,1,opt,name=cookie,proto3" json:"cookie,omitempty"`
}

func (x *ForwardingPipelineConfig_Cookie) Reset() {
	*x = ForwardingPipelineConfig_Cookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4runtime_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardingPipelineConfig_Cookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardingPipelineConfig_Cookie) ProtoMessage() {}

func (x *ForwardingPipelineConfig_Cookie) ProtoReflect() protoreflect.Message {
	mi := &file_p4runtime_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardingPipelineConfig_Cookie.ProtoReflect.Descriptor instead.
func (*ForwardingPipelineConfig_Cookie) Descriptor() ([]byte, []int) {
	return file_p4runtime_proto_rawDescGZIP(), []int{46, 0}
}

func (x *ForwardingPipelineConfig_Cookie) GetCookie() uint64 {
	if x != nil {
		return x.Cookie
	}
	return 0
}

var File_p4runtime_proto protoreflect.FileDescriptor

var file_p4runtime_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x34, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x70, 0x34, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x34,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x02, 0x0a, 0x0c, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x32, 0x38, 0x52, 0x0a, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x38, 0x0a,
	0x09, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x09, 0x61, 0x74,
	0x6f, 0x6d, 0x69, 0x63, 0x69, 0x74, 0x79, 0x22, 0x4f, 0x0a, 0x09, 0x41, 0x74, 0x6f, 0x6d, 0x69,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x54, 0x49, 0x4e, 0x55, 0x45,
	0x5f, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x52,
	0x4f, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x41, 0x54, 0x41, 0x50, 0x4c, 0x41, 0x4e, 0x45, 0x5f,
	0x41, 0x54, 0x4f, 0x4d, 0x49, 0x43, 0x10, 0x02, 0x22, 0x0f, 0x0a, 0x0d, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x0b, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x22, 0x36, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x3b, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x22, 0xae, 0x06, 0x0a, 0x06, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0b,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x0b, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x48, 0x00, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x4d,
	0x0a, 0x15, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x13, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4a, 0x0a,
	0x14, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x0a, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x44, 0x0a, 0x12,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x10, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x37, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x4a, 0x0a, 0x14, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x12, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x69, 0x0a, 0x1f, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x1c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x3b, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x3a, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x0c, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x7c, 0x0a, 0x0b, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x98, 0x04, 0x0a, 0x0a, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x33,
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x65, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x11, 0x69,
	0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x64, 0x6c, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4e, 0x73, 0x12,
	0x49, 0x0a, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x68, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x49, 0x64, 0x6c,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x69,
	0x6e, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x48, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x2c, 0x0a, 0x0b, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64,
	0x5f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6c, 0x61, 0x70, 0x73,
	0x65, 0x64, 0x4e, 0x73, 0x22, 0xb9, 0x04, 0x0a, 0x0a, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x05, 0x65, 0x78, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x45, 0x78,
	0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x05, 0x65, 0x78, 0x61, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x07,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x54, 0x65,
	0x72, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x07, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x72, 0x79,
	0x12, 0x26, 0x0a, 0x03, 0x6c, 0x70, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x4c, 0x50,
	0x4d, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x70, 0x6d, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x2c, 0x0a,
	0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x1a, 0x1d, 0x0a, 0x05, 0x45,
	0x78, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x33, 0x0a, 0x07, 0x54, 0x65,
	0x72, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x1a,
	0x3a, 0x0a, 0x03, 0x4c, 0x50, 0x4d, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x6e, 0x1a, 0x2d, 0x0a, 0x05, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x1a, 0x20, 0x0a, 0x08, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x12, 0x0a, 0x10,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x88, 0x02, 0x0a, 0x0b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x18, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x15, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x17, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x14, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x19, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x16, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x67, 0x0a, 0x16, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x4d, 0x0a, 0x16, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x05, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02, 0x18, 0x01, 0x48, 0x00, 0x52, 0x05, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0a, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x6f, 0x72, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6b,
	0x69, 0x6e, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xba, 0x02, 0x0a, 0x12, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x2a, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0x88, 0x01, 0x0a, 0x06, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x05, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02, 0x18, 0x01, 0x48, 0x00, 0x52,
	0x05, 0x77, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0a, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x6f, 0x72, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x1d, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x71, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x27,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x6c, 0x0a, 0x10, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x0b, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x61, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x63, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x62, 0x75, 0x72, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x62, 0x75, 0x72, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x62, 0x75, 0x72, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x70, 0x62, 0x75, 0x72, 0x73, 0x74, 0x22, 0x73, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6a, 0x0a,
	0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4f, 0x0a, 0x0b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x79,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x1c, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x4d, 0x0a, 0x15, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x47, 0x0a, 0x13, 0x63, 0x6c,
	0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f,
	0x6e, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x11, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x46, 0x0a, 0x07, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x6c, 0x0a, 0x13, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x22, 0xb5, 0x01, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12,
	0x28, 0x0a, 0x10, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x36, 0x0a, 0x0e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x22, 0x5f, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x22, 0x71, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x34, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd4, 0x01, 0x0a, 0x0b, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x1a, 0x78, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x0a, 0x0e,
	0x6d, 0x61, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x4e, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4e, 0x73, 0x22, 0xec, 0x01, 0x0a,
	0x14, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x61, 0x72, 0x62, 0x69, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x72, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x72, 0x62, 0x69, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x4f, 0x75, 0x74, 0x48, 0x00, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x32, 0x0a, 0x0a, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x42, 0x08, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x55, 0x0a, 0x09, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x45, 0x0a, 0x0d, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0xe6, 0x02, 0x0a, 0x15, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x61, 0x72, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x72, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x72, 0x62, 0x69, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x06,
	0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06,
	0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x19, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x17, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x12,
	0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x22, 0x54, 0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x80, 0x01, 0x0a, 0x0a, 0x44, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x34, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x47, 0x0a, 0x0e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x17, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41,
	0x72, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x32, 0x38, 0x52, 0x0a, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5c, 0x0a,
	0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x02, 0x18, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x68, 0x0a, 0x17, 0x49,
	0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xa8, 0x02, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63,
	0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x33, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x4f, 0x75, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x6b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x3e, 0x0a, 0x0e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6f, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x4f, 0x75, 0x74, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74,
	0x22, 0x4f, 0x0a, 0x12, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x6b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x63, 0x6b, 0x52, 0x0d, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x6b, 0x22, 0x3e, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x22, 0x2f, 0x0a, 0x07, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x32, 0x38, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x69, 0x67, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6c,
	0x6f, 0x77, 0x22, 0x96, 0x03, 0x0a, 0x22, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x32, 0x38, 0x52, 0x0a, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x62, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x77, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x45, 0x52,
	0x49, 0x46, 0x59, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x10, 0x02, 0x12, 0x15,
	0x0a, 0x11, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x43, 0x4f, 0x4d,
	0x4d, 0x49, 0x54, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10,
	0x04, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x43, 0x49, 0x4c, 0x45, 0x5f, 0x41,
	0x4e, 0x44, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10, 0x05, 0x22, 0x25, 0x0a, 0x23, 0x53,
	0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x18, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x22, 0x0a, 0x06, 0x70, 0x34, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x34, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x34, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x34, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x70,
	0x34, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3b, 0x0a,
	0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x1a, 0x20, 0x0a, 0x06, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x22, 0xfa, 0x01, 0x0a,
	0x22, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x58, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5d, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4f, 0x4b, 0x49, 0x45, 0x5f, 0x4f, 0x4e,
	0x4c, 0x59, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x34, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x41,
	0x4e, 0x44, 0x5f, 0x43, 0x4f, 0x4f, 0x4b, 0x49, 0x45, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x44,
	0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x41, 0x4e, 0x44,
	0x5f, 0x43, 0x4f, 0x4f, 0x4b, 0x49, 0x45, 0x10, 0x03, 0x22, 0x5b, 0x0a, 0x23, 0x47, 0x65, 0x74,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xa2, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69,
	0x63, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x4a, 0x0a, 0x14, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x34,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x34, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2a, 0x8a,
	0x01, 0x0a, 0x07, 0x53, 0x64, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x44,
	0x4e, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x10, 0x0a, 0x0c, 0x53, 0x44, 0x4e, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x49, 0x4e,
	0x10, 0x01, 0x12, 0x19, 0x0a, 0x0c, 0x53, 0x44, 0x4e, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d,
	0x41, 0x58, 0x10, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x21, 0x0a,
	0x14, 0x53, 0x44, 0x4e, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x49, 0x52, 0x43,
	0x55, 0x4c, 0x41, 0x54, 0x45, 0x10, 0xfa, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,
	0x12, 0x19, 0x0a, 0x0c, 0x53, 0x44, 0x4e, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x50, 0x55,
	0x10, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x32, 0xdf, 0x03, 0x0a, 0x09,
	0x50, 0x34, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x04, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x70, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0d,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x43, 0x0a, 0x0c, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x07, 0x5a,
	0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_p4runtime_proto_rawDescOnce sync.Once
	file_p4runtime_proto_rawDescData = file_p4runtime_proto_rawDesc
)

func file_p4runtime_proto_rawDescGZIP() []byte {
	file_p4runtime_proto_rawDescOnce.Do(func() {
		file_p4runtime_proto_rawDescData = protoimpl.X.CompressGZIP(file_p4runtime_proto_rawDescData)
	})
	return file_p4runtime_proto_rawDescData
}

var file_p4runtime_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_p4runtime_proto_msgTypes = make([]protoimpl.MessageInfo, 61)
var file_p4runtime_proto_goTypes = []interface{}{
	(SdnPort)(0),                // 0: pb.SdnPort
	(WriteRequest_Atomicity)(0), // 1: pb.WriteRequest.Atomicity
	(Update_Type)(0),            // 2: pb.Update.Type
	(SetForwardingPipelineConfigRequest_Action)(0),       // 3: pb.SetForwardingPipelineConfigRequest.Action
	(GetForwardingPipelineConfigRequest_ResponseType)(0), // 4: pb.GetForwardingPipelineConfigRequest.ResponseType
	(*WriteRequest)(nil),                                 // 5: pb.WriteRequest
	(*WriteResponse)(nil),                                // 6: pb.WriteResponse
	(*ReadRequest)(nil),                                  // 7: pb.ReadRequest
	(*ReadResponse)(nil),                                 // 8: pb.ReadResponse
	(*Update)(nil),                                       // 9: pb.Update
	(*Entity)(nil),                                       // 10: pb.Entity
	(*ExternEntry)(nil),                                  // 11: pb.ExternEntry
	(*TableEntry)(nil),                                   // 12: pb.TableEntry
	(*FieldMatch)(nil),                                   // 13: pb.FieldMatch
	(*TableAction)(nil),                                  // 14: pb.TableAction
	(*ActionProfileActionSet)(nil),                       // 15: pb.ActionProfileActionSet
	(*ActionProfileAction)(nil),                          // 16: pb.ActionProfileAction
	(*ActionProfileMember)(nil),                          // 17: pb.ActionProfileMember
	(*ActionProfileGroup)(nil),                           // 18: pb.ActionProfileGroup
	(*Index)(nil),                                        // 19: pb.Index
	(*MeterEntry)(nil),                                   // 20: pb.MeterEntry
	(*DirectMeterEntry)(nil),                             // 21: pb.DirectMeterEntry
	(*MeterConfig)(nil),                                  // 22: pb.MeterConfig
	(*CounterEntry)(nil),                                 // 23: pb.CounterEntry
	(*DirectCounterEntry)(nil),                           // 24: pb.DirectCounterEntry
	(*CounterData)(nil),                                  // 25: pb.CounterData
	(*PacketReplicationEngineEntry)(nil),                 // 26: pb.PacketReplicationEngineEntry
	(*Replica)(nil),                                      // 27: pb.Replica
	(*MulticastGroupEntry)(nil),                          // 28: pb.MulticastGroupEntry
	(*CloneSessionEntry)(nil),                            // 29: pb.CloneSessionEntry
	(*ValueSetMember)(nil),                               // 30: pb.ValueSetMember
	(*ValueSetEntry)(nil),                                // 31: pb.ValueSetEntry
	(*RegisterEntry)(nil),                                // 32: pb.RegisterEntry
	(*DigestEntry)(nil),                                  // 33: pb.DigestEntry
	(*StreamMessageRequest)(nil),                         // 34: pb.StreamMessageRequest
	(*PacketOut)(nil),                                    // 35: pb.PacketOut
	(*DigestListAck)(nil),                                // 36: pb.DigestListAck
	(*StreamMessageResponse)(nil),                        // 37: pb.StreamMessageResponse
	(*PacketIn)(nil),                                     // 38: pb.PacketIn
	(*DigestList)(nil),                                   // 39: pb.DigestList
	(*PacketMetadata)(nil),                               // 40: pb.PacketMetadata
	(*MasterArbitrationUpdate)(nil),                      // 41: pb.MasterArbitrationUpdate
	(*Role)(nil),                                         // 42: pb.Role
	(*IdleTimeoutNotification)(nil),                      // 43: pb.IdleTimeoutNotification
	(*StreamError)(nil),                                  // 44: pb.StreamError
	(*PacketOutError)(nil),                               // 45: pb.PacketOutError
	(*DigestListAckError)(nil),                           // 46: pb.DigestListAckError
	(*StreamOtherError)(nil),                             // 47: pb.StreamOtherError
	(*Uint128)(nil),                                      // 48: pb.Uint128
	(*SetForwardingPipelineConfigRequest)(nil),           // 49: pb.SetForwardingPipelineConfigRequest
	(*SetForwardingPipelineConfigResponse)(nil),          // 50: pb.SetForwardingPipelineConfigResponse
	(*ForwardingPipelineConfig)(nil),                     // 51: pb.ForwardingPipelineConfig
	(*GetForwardingPipelineConfigRequest)(nil),           // 52: pb.GetForwardingPipelineConfigRequest
	(*GetForwardingPipelineConfigResponse)(nil),          // 53: pb.GetForwardingPipelineConfigResponse
	(*Error)(nil),                                        // 54: pb.Error
	(*CapabilitiesRequest)(nil),                          // 55: pb.CapabilitiesRequest
	(*CapabilitiesResponse)(nil),                         // 56: pb.CapabilitiesResponse
	(*TableEntry_IdleTimeout)(nil),                       // 57: pb.TableEntry.IdleTimeout
	(*FieldMatch_Exact)(nil),                             // 58: pb.FieldMatch.Exact
	(*FieldMatch_Ternary)(nil),                           // 59: pb.FieldMatch.Ternary
	(*FieldMatch_LPM)(nil),                               // 60: pb.FieldMatch.LPM
	(*FieldMatch_Range)(nil),                             // 61: pb.FieldMatch.Range
	(*FieldMatch_Optional)(nil),                          // 62: pb.FieldMatch.Optional
	(*ActionProfileGroup_Member)(nil),                    // 63: pb.ActionProfileGroup.Member
	(*DigestEntry_Config)(nil),                           // 64: pb.DigestEntry.Config
	(*ForwardingPipelineConfig_Cookie)(nil),              // 65: pb.ForwardingPipelineConfig.Cookie
	(*any.Any)(nil),                                      // 66: google.protobuf.Any
	(*Action)(nil),                                       // 67: pb.Action
	(*P4Data)(nil),                                       // 68: pb.P4Data
	(*Status)(nil),                                       // 69: pb.Status
	(*P4Info)(nil),                                       // 70: pb.P4Info
}
var file_p4runtime_proto_depIdxs = []int32{
	48, // 0: pb.WriteRequest.election_id:type_name -> pb.Uint128
	9,  // 1: pb.WriteRequest.updates:type_name -> pb.Update
	1,  // 2: pb.WriteRequest.atomicity:type_name -> pb.WriteRequest.Atomicity
	10, // 3: pb.ReadRequest.entities:type_name -> pb.Entity
	10, // 4: pb.ReadResponse.entities:type_name -> pb.Entity
	2,  // 5: pb.Update.type:type_name -> pb.Update.Type
	10, // 6: pb.Update.entity:type_name -> pb.Entity
	11, // 7: pb.Entity.extern_entry:type_name -> pb.ExternEntry
	12, // 8: pb.Entity.table_entry:type_name -> pb.TableEntry
	17, // 9: pb.Entity.action_profile_member:type_name -> pb.ActionProfileMember
	18, // 10: pb.Entity.action_profile_group:type_name -> pb.ActionProfileGroup
	20, // 11: pb.Entity.meter_entry:type_name -> pb.MeterEntry
	21, // 12: pb.Entity.direct_meter_entry:type_name -> pb.DirectMeterEntry
	23, // 13: pb.Entity.counter_entry:type_name -> pb.CounterEntry
	24, // 14: pb.Entity.direct_counter_entry:type_name -> pb.DirectCounterEntry
	26, // 15: pb.Entity.packet_replication_engine_entry:type_name -> pb.PacketReplicationEngineEntry
	31, // 16: pb.Entity.value_set_entry:type_name -> pb.ValueSetEntry
	32, // 17: pb.Entity.register_entry:type_name -> pb.RegisterEntry
	33, // 18: pb.Entity.digest_entry:type_name -> pb.DigestEntry
	66, // 19: pb.ExternEntry.entry:type_name -> google.protobuf.Any
	13, // 20: pb.TableEntry.match:type_name -> pb.FieldMatch
	14, // 21: pb.TableEntry.action:type_name -> pb.TableAction
	22, // 22: pb.TableEntry.meter_config:type_name -> pb.MeterConfig
	25, // 23: pb.TableEntry.counter_data:type_name -> pb.CounterData
	57, // 24: pb.TableEntry.time_since_last_hit:type_name -> pb.TableEntry.IdleTimeout
	58, // 25: pb.FieldMatch.exact:type_name -> pb.FieldMatch.Exact
	59, // 26: pb.FieldMatch.ternary:type_name -> pb.FieldMatch.Ternary
	60, // 27: pb.FieldMatch.lpm:type_name -> pb.FieldMatch.LPM
	61, // 28: pb.FieldMatch.range:type_name -> pb.FieldMatch.Range
	62, // 29: pb.FieldMatch.optional:type_name -> pb.FieldMatch.Optional
	66, // 30: pb.FieldMatch.other:type_name -> google.protobuf.Any
	67, // 31: pb.TableAction.action:type_name -> pb.Action
	15, // 32: pb.TableAction.action_profile_action_set:type_name -> pb.ActionProfileActionSet
	16, // 33: pb.ActionProfileActionSet.action_profile_actions:type_name -> pb.ActionProfileAction
	67, // 34: pb.ActionProfileAction.action:type_name -> pb.Action
	67, // 35: pb.ActionProfileMember.action:type_name -> pb.Action
	63, // 36: pb.ActionProfileGroup.members:type_name -> pb.ActionProfileGroup.Member
	19, // 37: pb.MeterEntry.index:type_name -> pb.Index
	22, // 38: pb.MeterEntry.config:type_name -> pb.MeterConfig
	12, // 39: pb.DirectMeterEntry.table_entry:type_name -> pb.TableEntry
	22, // 40: pb.DirectMeterEntry.config:type_name -> pb.MeterConfig
	19, // 41: pb.CounterEntry.index:type_name -> pb.Index
	25, // 42: pb.CounterEntry.data:type_name -> pb.CounterData
	12, // 43: pb.DirectCounterEntry.table_entry:type_name -> pb.TableEntry
	25, // 44: pb.DirectCounterEntry.data:type_name -> pb.CounterData
	28, // 45: pb.PacketReplicationEngineEntry.multicast_group_entry:type_name -> pb.MulticastGroupEntry
	29, // 46: pb.PacketReplicationEngineEntry.clone_session_entry:type_name -> pb.CloneSessionEntry
	27, // 47: pb.MulticastGroupEntry.replicas:type_name -> pb.Replica
	27, // 48: pb.CloneSessionEntry.replicas:type_name -> pb.Replica
	13, // 49: pb.ValueSetMember.match:type_name -> pb.FieldMatch
	30, // 50: pb.ValueSetEntry.members:type_name -> pb.ValueSetMember
	19, // 51: pb.RegisterEntry.index:type_name -> pb.Index
	68, // 52: pb.RegisterEntry.data:type_name -> pb.P4Data
	64, // 53: pb.DigestEntry.config:type_name -> pb.DigestEntry.Config
	41, // 54: pb.StreamMessageRequest.arbitration:type_name -> pb.MasterArbitrationUpdate
	35, // 55: pb.StreamMessageRequest.packet:type_name -> pb.PacketOut
	36, // 56: pb.StreamMessageRequest.digest_ack:type_name -> pb.DigestListAck
	66, // 57: pb.StreamMessageRequest.other:type_name -> google.protobuf.Any
	40, // 58: pb.PacketOut.metadata:type_name -> pb.PacketMetadata
	41, // 59: pb.StreamMessageResponse.arbitration:type_name -> pb.MasterArbitrationUpdate
	38, // 60: pb.StreamMessageResponse.packet:type_name -> pb.PacketIn
	39, // 61: pb.StreamMessageResponse.digest:type_name -> pb.DigestList
	43, // 62: pb.StreamMessageResponse.idle_timeout_notification:type_name -> pb.IdleTimeoutNotification
	66, // 63: pb.StreamMessageResponse.other:type_name -> google.protobuf.Any
	44, // 64: pb.StreamMessageResponse.error:type_name -> pb.StreamError
	40, // 65: pb.PacketIn.metadata:type_name -> pb.PacketMetadata
	68, // 66: pb.DigestList.data:type_name -> pb.P4Data
	42, // 67: pb.MasterArbitrationUpdate.role:type_name -> pb.Role
	48, // 68: pb.MasterArbitrationUpdate.election_id:type_name -> pb.Uint128
	69, // 69: pb.MasterArbitrationUpdate.status:type_name -> pb.Status
	66, // 70: pb.Role.config:type_name -> google.protobuf.Any
	12, // 71: pb.IdleTimeoutNotification.table_entry:type_name -> pb.TableEntry
	45, // 72: pb.StreamError.packet_out:type_name -> pb.PacketOutError
	46, // 73: pb.StreamError.digest_list_ack:type_name -> pb.DigestListAckError
	47, // 74: pb.StreamError.other:type_name -> pb.StreamOtherError
	35, // 75: pb.PacketOutError.packet_out:type_name -> pb.PacketOut
	36, // 76: pb.DigestListAckError.digest_list_ack:type_name -> pb.DigestListAck
	66, // 77: pb.StreamOtherError.other:type_name -> google.protobuf.Any
	48, // 78: pb.SetForwardingPipelineConfigRequest.election_id:type_name -> pb.Uint128
	3,  // 79: pb.SetForwardingPipelineConfigRequest.action:type_name -> pb.SetForwardingPipelineConfigRequest.Action
	51, // 80: pb.SetForwardingPipelineConfigRequest.config:type_name -> pb.ForwardingPipelineConfig
	70, // 81: pb.ForwardingPipelineConfig.p4info:type_name -> pb.P4Info
	65, // 82: pb.ForwardingPipelineConfig.cookie:type_name -> pb.ForwardingPipelineConfig.Cookie
	4,  // 83: pb.GetForwardingPipelineConfigRequest.response_type:type_name -> pb.GetForwardingPipelineConfigRequest.ResponseType
	51, // 84: pb.GetForwardingPipelineConfigResponse.config:type_name -> pb.ForwardingPipelineConfig
	66, // 85: pb.Error.details:type_name -> google.protobuf.Any
	5,  // 86: pb.P4Runtime.Write:input_type -> pb.WriteRequest
	7,  // 87: pb.P4Runtime.Read:input_type -> pb.ReadRequest
	49, // 88: pb.P4Runtime.SetForwardingPipelineConfig:input_type -> pb.SetForwardingPipelineConfigRequest
	52, // 89: pb.P4Runtime.GetForwardingPipelineConfig:input_type -> pb.GetForwardingPipelineConfigRequest
	34, // 90: pb.P4Runtime.StreamChannel:input_type -> pb.StreamMessageRequest
	55, // 91: pb.P4Runtime.Capabilities:input_type -> pb.CapabilitiesRequest
	6,  // 92: pb.P4Runtime.Write:output_type -> pb.WriteResponse
	8,  // 93: pb.P4Runtime.Read:output_type -> pb.ReadResponse
	50, // 94: pb.P4Runtime.SetForwardingPipelineConfig:output_type -> pb.SetForwardingPipelineConfigResponse
	53, // 95: pb.P4Runtime.GetForwardingPipelineConfig:output_type -> pb.GetForwardingPipelineConfigResponse
	37, // 96: pb.P4Runtime.StreamChannel:output_type -> pb.StreamMessageResponse
	56, // 97: pb.P4Runtime.Capabilities:output_type -> pb.CapabilitiesResponse
	92, // [92:98] is the sub-list for method output_type
	86, // [86:92] is the sub-list for method input_type
	86, // [86:86] is the sub-list for extension type_name
	86, // [86:86] is the sub-list for extension extendee
	0,  // [0:86] is the sub-list for field type_name
}

func init() { file_p4runtime_proto_init() }
func file_p4runtime_proto_init() {
	if File_p4runtime_proto != nil {
		return
	}
	file_status_proto_init()
	file_p4info_proto_init()
	file_p4data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_p4runtime_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionProfileActionSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionProfileAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionProfileMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionProfileGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeterEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectMeterEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CounterEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectCounterEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CounterData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketReplicationEngineEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Replica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MulticastGroupEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneSessionEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueSetMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueSetEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DigestEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DigestListAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DigestList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterArbitrationUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdleTimeoutNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketOutError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DigestListAckError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamOtherError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uint128); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetForwardingPipelineConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetForwardingPipelineConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardingPipelineConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForwardingPipelineConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForwardingPipelineConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapabilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableEntry_IdleTimeout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldMatch_Exact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldMatch_Ternary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldMatch_LPM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldMatch_Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldMatch_Optional); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionProfileGroup_Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DigestEntry_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4runtime_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardingPipelineConfig_Cookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_p4runtime_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Entity_ExternEntry)(nil),
		(*Entity_TableEntry)(nil),
		(*Entity_ActionProfileMember)(nil),
		(*Entity_ActionProfileGroup)(nil),
		(*Entity_MeterEntry)(nil),
		(*Entity_DirectMeterEntry)(nil),
		(*Entity_CounterEntry)(nil),
		(*Entity_DirectCounterEntry)(nil),
		(*Entity_PacketReplicationEngineEntry)(nil),
		(*Entity_ValueSetEntry)(nil),
		(*Entity_RegisterEntry)(nil),
		(*Entity_DigestEntry)(nil),
	}
	file_p4runtime_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*FieldMatch_Exact_)(nil),
		(*FieldMatch_Ternary_)(nil),
		(*FieldMatch_Lpm)(nil),
		(*FieldMatch_Range_)(nil),
		(*FieldMatch_Optional_)(nil),
		(*FieldMatch_Other)(nil),
	}
	file_p4runtime_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*TableAction_Action)(nil),
		(*TableAction_ActionProfileMemberId)(nil),
		(*TableAction_ActionProfileGroupId)(nil),
		(*TableAction_ActionProfileActionSet)(nil),
	}
	file_p4runtime_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ActionProfileAction_Watch)(nil),
		(*ActionProfileAction_WatchPort)(nil),
	}
	file_p4runtime_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*PacketReplicationEngineEntry_MulticastGroupEntry)(nil),
		(*PacketReplicationEngineEntry_CloneSessionEntry)(nil),
	}
	file_p4runtime_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*StreamMessageRequest_Arbitration)(nil),
		(*StreamMessageRequest_Packet)(nil),
		(*StreamMessageRequest_DigestAck)(nil),
		(*StreamMessageRequest_Other)(nil),
	}
	file_p4runtime_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*StreamMessageResponse_Arbitration)(nil),
		(*StreamMessageResponse_Packet)(nil),
		(*StreamMessageResponse_Digest)(nil),
		(*StreamMessageResponse_IdleTimeoutNotification)(nil),
		(*StreamMessageResponse_Other)(nil),
		(*StreamMessageResponse_Error)(nil),
	}
	file_p4runtime_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*StreamError_PacketOut)(nil),
		(*StreamError_DigestListAck)(nil),
		(*StreamError_Other)(nil),
	}
	file_p4runtime_proto_msgTypes[58].OneofWrappers = []interface{}{
		(*ActionProfileGroup_Member_Watch)(nil),
		(*ActionProfileGroup_Member_WatchPort)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_p4runtime_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   61,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_p4runtime_proto_goTypes,
		DependencyIndexes: file_p4runtime_proto_depIdxs,
		EnumInfos:         file_p4runtime_proto_enumTypes,
		MessageInfos:      file_p4runtime_proto_msgTypes,
	}.Build()
	File_p4runtime_proto = out.File
	file_p4runtime_proto_rawDesc = nil
	file_p4runtime_proto_goTypes = nil
	file_p4runtime_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// P4RuntimeClient is the client API for P4Runtime service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type P4RuntimeClient interface {
	Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (P4Runtime_ReadClient, error)
	SetForwardingPipelineConfig(ctx context.Context, in *SetForwardingPipelineConfigRequest, opts ...grpc.CallOption) (*SetForwardingPipelineConfigResponse, error)
	GetForwardingPipelineConfig(ctx context.Context, in *GetForwardingPipelineConfigRequest, opts ...grpc.CallOption) (*GetForwardingPipelineConfigResponse, error)
	StreamChannel(ctx context.Context, opts ...grpc.CallOption) (P4Runtime_StreamChannelClient, error)
	Capabilities(ctx context.Context, in *CapabilitiesRequest, opts ...grpc.CallOption) (*CapabilitiesResponse, error)
}

type p4RuntimeClient struct {
	cc grpc.ClientConnInterface
}

func NewP4RuntimeClient(cc grpc.ClientConnInterface) P4RuntimeClient {
	return &p4RuntimeClient{cc}
}

func (c *p4RuntimeClient) Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error) {
	out := new(WriteResponse)
	err := c.cc.Invoke(ctx, "/pb.P4Runtime/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *p4RuntimeClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (P4Runtime_ReadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_P4Runtime_serviceDesc.Streams[0], "/pb.P4Runtime/Read", opts...)
	if err != nil {
		return nil, err
	}
	x := &p4RuntimeReadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type P4Runtime_ReadClient interface {
	Recv() (*ReadResponse, error)
	grpc.ClientStream
}

type p4RuntimeReadClient struct {
	grpc.ClientStream
}

func (x *p4RuntimeReadClient) Recv() (*ReadResponse, error) {
	m := new(ReadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *p4RuntimeClient) SetForwardingPipelineConfig(ctx context.Context, in *SetForwardingPipelineConfigRequest, opts ...grpc.CallOption) (*SetForwardingPipelineConfigResponse, error) {
	out := new(SetForwardingPipelineConfigResponse)
	err := c.cc.Invoke(ctx, "/pb.P4Runtime/SetForwardingPipelineConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *p4RuntimeClient) GetForwardingPipelineConfig(ctx context.Context, in *GetForwardingPipelineConfigRequest, opts ...grpc.CallOption) (*GetForwardingPipelineConfigResponse, error) {
	out := new(GetForwardingPipelineConfigResponse)
	err := c.cc.Invoke(ctx, "/pb.P4Runtime/GetForwardingPipelineConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *p4RuntimeClient) StreamChannel(ctx context.Context, opts ...grpc.CallOption) (P4Runtime_StreamChannelClient, error) {
	stream, err := c.cc.NewStream(ctx, &_P4Runtime_serviceDesc.Streams[1], "/pb.P4Runtime/StreamChannel", opts...)
	if err != nil {
		return nil, err
	}
	x := &p4RuntimeStreamChannelClient{stream}
	return x, nil
}

type P4Runtime_StreamChannelClient interface {
	Send(*StreamMessageRequest) error
	Recv() (*StreamMessageResponse, error)
	grpc.ClientStream
}

type p4RuntimeStreamChannelClient struct {
	grpc.ClientStream
}

func (x *p4RuntimeStreamChannelClient) Send(m *StreamMessageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *p4RuntimeStreamChannelClient) Recv() (*StreamMessageResponse, error) {
	m := new(StreamMessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *p4RuntimeClient) Capabilities(ctx context.Context, in *CapabilitiesRequest, opts ...grpc.CallOption) (*CapabilitiesResponse, error) {
	out := new(CapabilitiesResponse)
	err := c.cc.Invoke(ctx, "/pb.P4Runtime/Capabilities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// P4RuntimeServer is the server API for P4Runtime service.
type P4RuntimeServer interface {
	Write(context.Context, *WriteRequest) (*WriteResponse, error)
	Read(*ReadRequest, P4Runtime_ReadServer) error
	SetForwardingPipelineConfig(context.Context, *SetForwardingPipelineConfigRequest) (*SetForwardingPipelineConfigResponse, error)
	GetForwardingPipelineConfig(context.Context, *GetForwardingPipelineConfigRequest) (*GetForwardingPipelineConfigResponse, error)
	StreamChannel(P4Runtime_StreamChannelServer) error
	Capabilities(context.Context, *CapabilitiesRequest) (*CapabilitiesResponse, error)
}

// UnimplementedP4RuntimeServer can be embedded to have forward compatible implementations.
type UnimplementedP4RuntimeServer struct {
}

func (*UnimplementedP4RuntimeServer) Write(context.Context, *WriteRequest) (*WriteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Write not implemented")
}
func (*UnimplementedP4RuntimeServer) Read(*ReadRequest, P4Runtime_ReadServer) error {
	return status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedP4RuntimeServer) SetForwardingPipelineConfig(context.Context, *SetForwardingPipelineConfigRequest) (*SetForwardingPipelineConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetForwardingPipelineConfig not implemented")
}
func (*UnimplementedP4RuntimeServer) GetForwardingPipelineConfig(context.Context, *GetForwardingPipelineConfigRequest) (*GetForwardingPipelineConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetForwardingPipelineConfig not implemented")
}
func (*UnimplementedP4RuntimeServer) StreamChannel(P4Runtime_StreamChannelServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamChannel not implemented")
}
func (*UnimplementedP4RuntimeServer) Capabilities(context.Context, *CapabilitiesRequest) (*CapabilitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Capabilities not implemented")
}

func RegisterP4RuntimeServer(s *grpc.Server, srv P4RuntimeServer) {
	s.RegisterService(&_P4Runtime_serviceDesc, srv)
}

func _P4Runtime_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(P4RuntimeServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.P4Runtime/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(P4RuntimeServer).Write(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _P4Runtime_Read_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(P4RuntimeServer).Read(m, &p4RuntimeReadServer{stream})
}

type P4Runtime_ReadServer interface {
	Send(*ReadResponse) error
	grpc.ServerStream
}

type p4RuntimeReadServer struct {
	grpc.ServerStream
}

func (x *p4RuntimeReadServer) Send(m *ReadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _P4Runtime_SetForwardingPipelineConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetForwardingPipelineConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(P4RuntimeServer).SetForwardingPipelineConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.P4Runtime/SetForwardingPipelineConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(P4RuntimeServer).SetForwardingPipelineConfig(ctx, req.(*SetForwardingPipelineConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _P4Runtime_GetForwardingPipelineConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetForwardingPipelineConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(P4RuntimeServer).GetForwardingPipelineConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.P4Runtime/GetForwardingPipelineConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(P4RuntimeServer).GetForwardingPipelineConfig(ctx, req.(*GetForwardingPipelineConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _P4Runtime_StreamChannel_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(P4RuntimeServer).StreamChannel(&p4RuntimeStreamChannelServer{stream})
}

type P4Runtime_StreamChannelServer interface {
	Send(*StreamMessageResponse) error
	Recv() (*StreamMessageRequest, error)
	grpc.ServerStream
}

type p4RuntimeStreamChannelServer struct {
	grpc.ServerStream
}

func (x *p4RuntimeStreamChannelServer) Send(m *StreamMessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *p4RuntimeStreamChannelServer) Recv() (*StreamMessageRequest, error) {
	m := new(StreamMessageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _P4Runtime_Capabilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CapabilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(P4RuntimeServer).Capabilities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.P4Runtime/Capabilities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(P4RuntimeServer).Capabilities(ctx, req.(*CapabilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _P4Runtime_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.P4Runtime",
	HandlerType: (*P4RuntimeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Write",
			Handler:    _P4Runtime_Write_Handler,
		},
		{
			MethodName: "SetForwardingPipelineConfig",
			Handler:    _P4Runtime_SetForwardingPipelineConfig_Handler,
		},
		{
			MethodName: "GetForwardingPipelineConfig",
			Handler:    _P4Runtime_GetForwardingPipelineConfig_Handler,
		},
		{
			MethodName: "Capabilities",
			Handler:    _P4Runtime_Capabilities_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Read",
			Handler:       _P4Runtime_Read_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamChannel",
			Handler:       _P4Runtime_StreamChannel_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "p4runtime.proto",
}
